

    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM0.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM0.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 44 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00592000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00067000
 amoeba2 0.03048400
 for num_harmonics 0.00341200
 for in 0.04074100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  11% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00368500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055700
 amoeba2 0.01999700
 for num_harmonics 0.00188900
 for in 0.02641000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  22% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009800
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00359000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055600
 amoeba2 0.01949900
 for num_harmonics 0.00187500
 for in 0.02576100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00442000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055600
 amoeba2 0.02497200
 for num_harmonics 0.00188400
 for in 0.03211300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00407800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02478300
 for num_harmonics 0.00189100
 for in 0.03159500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  55% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00200200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027800
 amoeba2 0.01199700
 for num_harmonics 0.00093200
 for in 0.01536800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00213700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01142900
 for num_harmonics 0.00093500
 for in 0.01494000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  77% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00113800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00531600
 for num_harmonics 0.00048400
 for in 0.00717400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00367800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057100
 amoeba2 0.03367700
 for num_harmonics 0.00192400
 for in 0.04011800
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.23430 s


width < len (6) in center_string(outstring, '862.16', width=5)

width < len (9) in center_string(outstring, '371755.09', width=6)

width < len (6) in center_string(outstring, '147.56', width=5)

width < len (8) in center_string(outstring, '10959.45', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4982(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9861(70)', width=10)

width < len (14) in center_string(outstring, '-0.3(1.3)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.2(1.3)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.1)x10^2', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.31', width=5)

width < len (11) in center_string(outstring, ' 0.5128(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7233(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.6)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.2)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM0.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM0.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM9.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM9.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 29 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009200
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00593600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062900
 amoeba2 0.03082300
 for num_harmonics 0.00333800
 for in 0.04098500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  11% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00096000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015400
 amoeba2 0.00535700
 for num_harmonics 0.00048000
 for in 0.00703300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018300
 amoeba1 0.00342200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02197500
 for num_harmonics 0.00187200
 for in 0.02802500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00146400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00449100
 for num_harmonics 0.00047300
 for in 0.00665100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  44% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00421300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02529100
 for num_harmonics 0.00214300
 for in 0.03249700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  55% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00416800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02640900
 for num_harmonics 0.00204600
 for in 0.03346900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00418700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01080400
 for num_harmonics 0.00095000
 for in 0.01638000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  77% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00202200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027600
 amoeba2 0.01111500
 for num_harmonics 0.00094300
 for in 0.01451400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00413600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02879200
 for num_harmonics 0.00191600
 for in 0.03568400
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.21533 s


width < len (6) in center_string(outstring, '861.38', width=5)

width < len (9) in center_string(outstring, '371084.19', width=6)

width < len (6) in center_string(outstring, '149.00', width=5)

width < len (8) in center_string(outstring, '11127.41', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9891(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9883(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.7(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(4.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(4.1)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.1(1.9)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.2(2.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(4.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM9.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM9.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM59.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM59.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 26 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00016500
 amoeba1 0.00778400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063300
 amoeba2 0.02852300
 for num_harmonics 0.00326400
 for in 0.04046600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00137500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00457400
 for num_harmonics 0.00048600
 for in 0.00663900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00193000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01133600
 for num_harmonics 0.00094200
 for in 0.01462400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00379600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03195800
 for num_harmonics 0.00201000
 for in 0.03857100
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.10034 s


width < len (6) in center_string(outstring, '903.81', width=5)

width < len (9) in center_string(outstring, '408538.16', width=6)

width < len (6) in center_string(outstring, '133.22', width=5)

width < len (7) in center_string(outstring, '8900.72', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9851(73)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.45', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7204(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM59.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM59.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM14.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM14.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00654400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063200
 amoeba2 0.02793500
 for num_harmonics 0.00338100
 for in 0.03875800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00114000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00397300
 for num_harmonics 0.00047600
 for in 0.00578900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00015900
 amoeba1 0.00324500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056300
 amoeba2 0.02032300
 for num_harmonics 0.00189100
 for in 0.02619100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00125600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00019900
 amoeba2 0.00648900
 for num_harmonics 0.00071200
 for in 0.00872000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00019000
 amoeba1 0.00577200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00080600
 amoeba2 0.04489200
 for num_harmonics 0.00316100
 for in 0.05496000
 candidate_sigmaZ 0.00000400

Amount of optimization complete = 100%

for1 cost 0.13448 s


width < len (6) in center_string(outstring, '861.60', width=5)

width < len (9) in center_string(outstring, '371275.91', width=6)

width < len (6) in center_string(outstring, '151.43', width=5)

width < len (8) in center_string(outstring, '11492.16', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9884(69)', width=10)

width < len (14) in center_string(outstring, '0.0(1.5)x10^-1', width=12)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9872(69)', width=10)

width < len (13) in center_string(outstring, '0.0(1.4)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7209(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(3.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM14.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM14.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM83.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM83.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00541800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062900
 amoeba2 0.02805200
 for num_harmonics 0.00338100
 for in 0.03773600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00048800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00242300
 for num_harmonics 0.00024100
 for in 0.00328800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00105700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00548000
 for num_harmonics 0.00049200
 for in 0.00727300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00000100
 power_call_rz_harmonics 0.00005200
 amoeba1 0.00100300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015100
 amoeba2 0.00486300
 for num_harmonics 0.00046900
 for in 0.00654600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.05488 s


width < len (6) in center_string(outstring, '960.48', width=5)

width < len (9) in center_string(outstring, '461364.97', width=6)

width < len (7) in center_string(outstring, '4757.67', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4969(52)', width=10)

width < len (11) in center_string(outstring, ' 0.9872(81)', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM83.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM83.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM69.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM69.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 15 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00956800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063500
 amoeba2 0.02927800
 for num_harmonics 0.00326500
 for in 0.04300200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00046800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007600
 amoeba2 0.00234600
 for num_harmonics 0.00023600
 for in 0.00319000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00248400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028200
 amoeba2 0.00993000
 for num_harmonics 0.00092800
 for in 0.01378200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00428700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03734400
 for num_harmonics 0.00191500
 for in 0.04438300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00429300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02552500
 for num_harmonics 0.00186500
 for in 0.03253100
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.13694 s


width < len (6) in center_string(outstring, '930.77', width=5)

width < len (9) in center_string(outstring, '433263.91', width=6)

width < len (6) in center_string(outstring, '121.92', width=5)

width < len (7) in center_string(outstring, '7450.12', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(48)', width=10)

width < len (11) in center_string(outstring, ' 0.9858(75)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7205(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM69.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM69.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM81.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM81.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 9 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00787300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066700
 amoeba2 0.03104100
 for num_harmonics 0.00336100
 for in 0.04319600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003900
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00078400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00228100
 for num_harmonics 0.00024100
 for in 0.00344600
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.04666 s


width < len (6) in center_string(outstring, '956.79', width=5)

width < len (9) in center_string(outstring, '457827.34', width=6)

width < len (6) in center_string(outstring, '100.87', width=5)

width < len (7) in center_string(outstring, '5105.19', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4969(51)', width=10)

width < len (11) in center_string(outstring, ' 0.9856(80)', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM81.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM81.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM31.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM31.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00732600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062800
 amoeba2 0.02975400
 for num_harmonics 0.00326300
 for in 0.04122400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00077700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00552300
 for num_harmonics 0.00047500
 for in 0.00700500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00783600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02318800
 for num_harmonics 0.00198800
 for in 0.03385800
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002200
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00042300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00241200
 for num_harmonics 0.00023600
 for in 0.00319000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  80% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00488800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.03409300
 for num_harmonics 0.00199200
 for in 0.04180800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12713 s


width < len (6) in center_string(outstring, '872.77', width=5)

width < len (9) in center_string(outstring, '380965.34', width=6)

width < len (6) in center_string(outstring, '151.70', width=5)

width < len (8) in center_string(outstring, '11534.03', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9872(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9900(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7214(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM31.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM31.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM22.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM22.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00801900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066100
 amoeba2 0.02745200
 for num_harmonics 0.00324300
 for in 0.03962800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00173800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00481100
 for num_harmonics 0.00047700
 for in 0.00725100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00392100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059400
 amoeba2 0.02285300
 for num_harmonics 0.00199900
 for in 0.02964900
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00089900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00502700
 for num_harmonics 0.00047400
 for in 0.00661400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00186500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.00956200
 for num_harmonics 0.00098400
 for in 0.01285000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00489100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03271600
 for num_harmonics 0.00197100
 for in 0.04039900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00173800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027700
 amoeba2 0.01017600
 for num_harmonics 0.00093200
 for in 0.01328100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00381500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063700
 amoeba2 0.02757900
 for num_harmonics 0.00286800
 for in 0.03518000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.18493 s


width < len (6) in center_string(outstring, '868.04', width=5)

width < len (9) in center_string(outstring, '376842.97', width=6)

width < len (6) in center_string(outstring, '151.58', width=5)

width < len (8) in center_string(outstring, '11516.14', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9897(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9875(69)', width=10)

width < len (13) in center_string(outstring, '0.0(1.4)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.33', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7219(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.7(1.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM22.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM22.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM27.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM27.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015400
 amoeba1 0.00586400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063300
 amoeba2 0.03921200
 for num_harmonics 0.00330600
 for in 0.04926700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00145800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00625900
 for num_harmonics 0.00047500
 for in 0.00841400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00596400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059500
 amoeba2 0.02363400
 for num_harmonics 0.00198100
 for in 0.03245700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00158900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00528000
 for num_harmonics 0.00046800
 for in 0.00754100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014100
 amoeba1 0.00397700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.03379800
 for num_harmonics 0.00190500
 for in 0.04051600
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.13825 s


width < len (6) in center_string(outstring, '867.75', width=5)

width < len (9) in center_string(outstring, '376597.03', width=6)

width < len (6) in center_string(outstring, '150.03', width=5)

width < len (8) in center_string(outstring, '11280.91', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9885(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9874(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.32', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM27.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM27.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM26.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM26.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00636600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066600
 amoeba2 0.03225200
 for num_harmonics 0.00325400
 for in 0.04279000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00149100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00537400
 for num_harmonics 0.00047900
 for in 0.00756700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00771600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059500
 amoeba2 0.02120700
 for num_harmonics 0.00202600
 for in 0.03182700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00086400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014500
 amoeba2 0.00540900
 for num_harmonics 0.00046400
 for in 0.00694700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00398000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02987100
 for num_harmonics 0.00191000
 for in 0.03659500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012500
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00483000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060500
 amoeba2 0.02483600
 for num_harmonics 0.00226500
 for in 0.03280400
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.15859 s


width < len (6) in center_string(outstring, '866.62', width=5)

width < len (9) in center_string(outstring, '375618.31', width=6)

width < len (6) in center_string(outstring, '150.49', width=5)

width < len (8) in center_string(outstring, '11350.30', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9887(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9895(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7207(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.7)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.6(1.0)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.9(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM26.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM26.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM56.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM56.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00724900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066400
 amoeba2 0.03135100
 for num_harmonics 0.00331000
 for in 0.04282800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00005200
 amoeba1 0.00079200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00010000
 amoeba2 0.00515900
 for num_harmonics 0.00050200
 for in 0.00663300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00153400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014700
 amoeba2 0.00544600
 for num_harmonics 0.00046500
 for in 0.00765800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00447800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03095100
 for num_harmonics 0.00205700
 for in 0.03832200
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00000200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00095300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014700
 amoeba2 0.00471800
 for num_harmonics 0.00046900
 for in 0.00633200
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.10183 s


width < len (6) in center_string(outstring, '901.48', width=5)

width < len (9) in center_string(outstring, '406430.03', width=6)

width < len (6) in center_string(outstring, '136.84', width=5)

width < len (7) in center_string(outstring, '9389.03', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9851(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.43', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7206(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM56.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM56.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM61.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM61.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 37 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00916100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062800
 amoeba2 0.02738100
 for num_harmonics 0.00324500
 for in 0.04067200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00135200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00517900
 for num_harmonics 0.00047000
 for in 0.00722400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00537800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02489400
 for num_harmonics 0.00189600
 for in 0.03300000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00532300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02281300
 for num_harmonics 0.00187800
 for in 0.03084300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00375000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00082200
 amoeba2 0.02394500
 for num_harmonics 0.00210600
 for in 0.03089600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014100
 amoeba1 0.00488600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02556500
 for num_harmonics 0.00208300
 for in 0.03337300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00390300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03753300
 for num_harmonics 0.00191200
 for in 0.04418200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00431000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055600
 amoeba2 0.02590400
 for num_harmonics 0.00211300
 for in 0.03316600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.25343 s


width < len (6) in center_string(outstring, '910.58', width=5)

width < len (9) in center_string(outstring, '414681.53', width=6)

width < len (6) in center_string(outstring, '131.13', width=5)

width < len (7) in center_string(outstring, '8623.74', width=6)

width < len (7) in center_string(outstring, '1326.73', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9861(73)', width=10)

width < len (11) in center_string(outstring, ' 0.4987(98)', width=10)

width < len (14) in center_string(outstring, ' 0.0(4.9)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.5(1.4)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.2(1.5)x10^1', width=12)

width < len (14) in center_string(outstring, '0.0(4.0)x10^-1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7230(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.5)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.3(2.1)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM61.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM61.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM58.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM58.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 25 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009000
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00684500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063400
 amoeba2 0.03337900
 for num_harmonics 0.00323800
 for in 0.04435300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003900
 amoeba1 0.00093200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015700
 amoeba2 0.00543900
 for num_harmonics 0.00047300
 for in 0.00708600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00281600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01153100
 for num_harmonics 0.00098900
 for in 0.01577600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00409600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057000
 amoeba2 0.03432800
 for num_harmonics 0.00247600
 for in 0.04172400
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.10899 s


width < len (6) in center_string(outstring, '902.59', width=5)

width < len (9) in center_string(outstring, '407434.62', width=6)

width < len (6) in center_string(outstring, '134.95', width=5)

width < len (7) in center_string(outstring, '9132.22', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9878(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.45', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7202(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM58.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM58.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM10.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM10.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 25 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00016300
 amoeba1 0.00596300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066300
 amoeba2 0.03135600
 for num_harmonics 0.00326400
 for in 0.04150700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00113700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00491400
 for num_harmonics 0.00047500
 for in 0.00674700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018200
 amoeba1 0.00336100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02182500
 for num_harmonics 0.00187900
 for in 0.02781800
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  37% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00154700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00506900
 for num_harmonics 0.00047600
 for in 0.00731600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00327300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02268400
 for num_harmonics 0.00215700
 for in 0.02896700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00789300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058900
 amoeba2 0.02239100
 for num_harmonics 0.00215200
 for in 0.03330600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006300
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00256400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01183300
 for num_harmonics 0.00095200
 for in 0.01577200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00404300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059700
 amoeba2 0.03466500
 for num_harmonics 0.00192200
 for in 0.04149700
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.20301 s


width < len (6) in center_string(outstring, '861.82', width=5)

width < len (9) in center_string(outstring, '371461.69', width=6)

width < len (6) in center_string(outstring, '148.89', width=5)

width < len (8) in center_string(outstring, '11111.51', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9857(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9887(69)', width=10)

width < len (13) in center_string(outstring, '0.0(1.9)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.7(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(4.3)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.1)x10^2', width=12)

width < len (13) in center_string(outstring, '0.0(1.0)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7213(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(4.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM10.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM10.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM21.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM21.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00737800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066100
 amoeba2 0.02781500
 for num_harmonics 0.00324900
 for in 0.03935900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00095300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015300
 amoeba2 0.00467900
 for num_harmonics 0.00048600
 for in 0.00635200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00341800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02947200
 for num_harmonics 0.00330700
 for in 0.03704500
 candidate_sigmaZ 0.00000600

Amount of optimization complete =  50% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003000
 power_call_rz_harmonics 0.00005500
 amoeba1 0.00125200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00023100
 amoeba2 0.00899000
 for num_harmonics 0.00083000
 for in 0.01140400
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  66% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00014200
 power_call_rz_harmonics 0.00022000
 amoeba1 0.00598900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00093300
 amoeba2 0.03293900
 for num_harmonics 0.00190900
 for in 0.04214600
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00177400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01114700
 for num_harmonics 0.00094100
 for in 0.01430200
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.15069 s


width < len (6) in center_string(outstring, '869.71', width=5)

width < len (9) in center_string(outstring, '378293.41', width=6)

width < len (6) in center_string(outstring, '151.79', width=5)

width < len (8) in center_string(outstring, '11547.12', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9881(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9870(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.32', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7204(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.8)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.1(3.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM21.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM21.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM38.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM38.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00751300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062900
 amoeba2 0.02749500
 for num_harmonics 0.00380100
 for in 0.03969100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00097200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015300
 amoeba2 0.00495400
 for num_harmonics 0.00047300
 for in 0.00661800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00587000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02132000
 for num_harmonics 0.00188700
 for in 0.02991900
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00122800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00475100
 for num_harmonics 0.00071600
 for in 0.00692900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00004300
 power_call_rz_harmonics 0.00005000
 amoeba1 0.00151500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00633900
 for num_harmonics 0.00047000
 for in 0.00857400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00397800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02988000
 for num_harmonics 0.00192000
 for in 0.03661600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12841 s


width < len (6) in center_string(outstring, '872.91', width=5)

width < len (9) in center_string(outstring, '381083.25', width=6)

width < len (6) in center_string(outstring, '148.55', width=5)

width < len (8) in center_string(outstring, '11059.99', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9876(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9891(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.41', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7198(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.1)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM38.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM38.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM43.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM43.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 11 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00579200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063300
 amoeba2 0.03446800
 for num_harmonics 0.00336800
 for in 0.04451700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00095400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015500
 amoeba2 0.00421500
 for num_harmonics 0.00047300
 for in 0.00587900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00610600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057000
 amoeba2 0.06191900
 for num_harmonics 0.00259600
 for in 0.07146400
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00092100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015400
 amoeba2 0.00495600
 for num_harmonics 0.00046600
 for in 0.00658000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009900
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00454600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055400
 amoeba2 0.02432100
 for num_harmonics 0.00188300
 for in 0.03154900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.16004 s


width < len (6) in center_string(outstring, '885.25', width=5)

width < len (9) in center_string(outstring, '391936.16', width=6)

width < len (6) in center_string(outstring, '145.12', width=5)

width < len (8) in center_string(outstring, '10557.06', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9881(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.41', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7216(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.3)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM43.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM43.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM68.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM68.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 19 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00017200
 amoeba1 0.00787400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00067700
 amoeba2 0.03001700
 for num_harmonics 0.00327500
 for in 0.04211300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00044900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00246400
 for num_harmonics 0.00024100
 for in 0.00329200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00184400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028800
 amoeba2 0.01024800
 for num_harmonics 0.00094100
 for in 0.01348200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00417900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02877300
 for num_harmonics 0.00202200
 for in 0.03581100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00050900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00262400
 for num_harmonics 0.00023200
 for in 0.00348000
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.09822 s


width < len (6) in center_string(outstring, '928.12', width=5)

width < len (9) in center_string(outstring, '430804.41', width=6)

width < len (6) in center_string(outstring, '123.38', width=5)

width < len (7) in center_string(outstring, '7628.98', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9829(75)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7197(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM68.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM68.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM43.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM43.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 13 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00724500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063100
 amoeba2 0.02740500
 for num_harmonics 0.00322600
 for in 0.03876100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00099000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015200
 amoeba2 0.00482800
 for num_harmonics 0.00049600
 for in 0.00654800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00165100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00571700
 for num_harmonics 0.00045700
 for in 0.00803800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00361000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03428100
 for num_harmonics 0.00192100
 for in 0.04065000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00411500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02295200
 for num_harmonics 0.00196500
 for in 0.02987900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008400
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00486600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055400
 amoeba2 0.02866500
 for num_harmonics 0.00187900
 for in 0.03619300
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.16013 s


width < len (6) in center_string(outstring, '882.99', width=5)

width < len (9) in center_string(outstring, '389936.34', width=6)

width < len (6) in center_string(outstring, '145.92', width=5)

width < len (8) in center_string(outstring, '10673.75', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9865(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.41', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7214(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM43.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM43.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM55.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM55.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00591700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062600
 amoeba2 0.03106000
 for num_harmonics 0.00330200
 for in 0.04115700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00127300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00514800
 for num_harmonics 0.00050400
 for in 0.00713300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006500
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00230300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01102200
 for num_harmonics 0.00095700
 for in 0.01470500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00398500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02917000
 for num_harmonics 0.00192700
 for in 0.03592000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.09896 s


width < len (6) in center_string(outstring, '898.47', width=5)

width < len (9) in center_string(outstring, '403721.56', width=6)

width < len (6) in center_string(outstring, '138.17', width=5)

width < len (7) in center_string(outstring, '9572.37', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9866(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7224(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM55.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM55.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM20.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM20.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00738100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063200
 amoeba2 0.02821500
 for num_harmonics 0.00476100
 for in 0.04124600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002500
 power_call_rz_harmonics 0.00005300
 amoeba1 0.00253200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00019600
 amoeba2 0.00734800
 for num_harmonics 0.00071000
 for in 0.01089000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000600
 power_call_rz_harmonics 0.00021300
 amoeba1 0.00490700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00093200
 amoeba2 0.03448900
 for num_harmonics 0.00190500
 for in 0.04246800
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003800
 amoeba1 0.00107100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00548300
 for num_harmonics 0.00047100
 for in 0.00725000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00404900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03198300
 for num_harmonics 0.00190500
 for in 0.03877500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00449900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056300
 amoeba2 0.02374000
 for num_harmonics 0.00195800
 for in 0.03104300
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.17175 s


width < len (6) in center_string(outstring, '867.25', width=5)

width < len (9) in center_string(outstring, '376156.22', width=6)

width < len (6) in center_string(outstring, '152.10', width=5)

width < len (8) in center_string(outstring, '11594.76', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9901(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9876(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.33', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7211(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.6)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.0)x10^3', width=12)

width < len (14) in center_string(outstring, ' 0.1(1.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM20.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM20.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM63.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM63.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 37 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00542200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062800
 amoeba2 0.02883200
 for num_harmonics 0.00330300
 for in 0.03844000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  11% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00048800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00216700
 for num_harmonics 0.00026000
 for in 0.00305300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00424100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056300
 amoeba2 0.02242700
 for num_harmonics 0.00190000
 for in 0.02938300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00689300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058400
 amoeba2 0.02443500
 for num_harmonics 0.00206300
 for in 0.03424700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  44% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00396600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03546200
 for num_harmonics 0.00197600
 for in 0.04223900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  55% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00655900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02030600
 for num_harmonics 0.00186900
 for in 0.02956300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00365100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060200
 amoeba2 0.03197100
 for num_harmonics 0.00308300
 for in 0.03958100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  77% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000600
 power_call_rz_harmonics 0.00021300
 amoeba1 0.00687700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00089000
 amoeba2 0.03751900
 for num_harmonics 0.00221600
 for in 0.04773800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007000
 amoeba1 0.00311500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027800
 amoeba2 0.01068600
 for num_harmonics 0.00094200
 for in 0.01518000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.27952 s


width < len (6) in center_string(outstring, '912.70', width=5)

width < len (9) in center_string(outstring, '416607.28', width=6)

width < len (6) in center_string(outstring, '129.21', width=5)

width < len (7) in center_string(outstring, '8365.57', width=6)

width < len (7) in center_string(outstring, '1239.78', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9874(73)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(99)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7220(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.1(1.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM63.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM63.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM77.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM77.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 7 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00561600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063200
 amoeba2 0.02949800
 for num_harmonics 0.00335500
 for in 0.03935200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002100
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00043400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007600
 amoeba2 0.00249800
 for num_harmonics 0.00023700
 for in 0.00329100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00458000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03039800
 for num_harmonics 0.00193600
 for in 0.03775100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00040500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00232300
 for num_harmonics 0.00023400
 for in 0.00307900
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.08351 s


width < len (6) in center_string(outstring, '951.02', width=5)

width < len (9) in center_string(outstring, '452319.66', width=6)

width < len (6) in center_string(outstring, '107.89', width=5)

width < len (7) in center_string(outstring, '5838.43', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(50)', width=10)

width < len (11) in center_string(outstring, ' 0.9858(78)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.49', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7204(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM77.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM77.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM12.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM12.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 26 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00703700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062900
 amoeba2 0.03051400
 for num_harmonics 0.00325900
 for in 0.04169300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00186700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00471700
 for num_harmonics 0.00047200
 for in 0.00728000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018100
 amoeba1 0.00376800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02290200
 for num_harmonics 0.00194000
 for in 0.02936400
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00076700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014600
 amoeba2 0.00510400
 for num_harmonics 0.00047300
 for in 0.00655600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00718200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02321700
 for num_harmonics 0.00194000
 for in 0.03319000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00063100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00010300
 amoeba2 0.00313400
 for num_harmonics 0.00036600
 for in 0.00428700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  85% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013500
 power_call_rz_harmonics 0.00020700
 amoeba1 0.00620400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00079400
 amoeba2 0.04476200
 for num_harmonics 0.00191800
 for in 0.05403500
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.17649 s


width < len (6) in center_string(outstring, '861.38', width=5)

width < len (9) in center_string(outstring, '371088.22', width=6)

width < len (6) in center_string(outstring, '150.70', width=5)

width < len (8) in center_string(outstring, '11382.67', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9898(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9884(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(3.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7201(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(3.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM12.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM12.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM68.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM68.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00684300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063100
 amoeba2 0.03081400
 for num_harmonics 0.00324400
 for in 0.04178600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00044400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00223500
 for num_harmonics 0.00023900
 for in 0.00305600
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00292600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00029800
 amoeba2 0.01171500
 for num_harmonics 0.00093200
 for in 0.01602800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00396900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057100
 amoeba2 0.03067700
 for num_harmonics 0.00191700
 for in 0.03740300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011500
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00488800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058900
 amoeba2 0.02352100
 for num_harmonics 0.00185500
 for in 0.03111400
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12943 s


width < len (6) in center_string(outstring, '926.50', width=5)

width < len (9) in center_string(outstring, '429300.34', width=6)

width < len (6) in center_string(outstring, '123.90', width=5)

width < len (7) in center_string(outstring, '7694.02', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9850(75)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7218(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM68.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM68.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM41.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM41.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00697000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063000
 amoeba2 0.02891900
 for num_harmonics 0.00327800
 for in 0.04005000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003900
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00089000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00490000
 for num_harmonics 0.00048200
 for in 0.00650400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013500
 amoeba1 0.00382200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.01948900
 for num_harmonics 0.00189300
 for in 0.02604600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00096500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015300
 amoeba2 0.00461900
 for num_harmonics 0.00046600
 for in 0.00629900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00457500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059800
 amoeba2 0.03743000
 for num_harmonics 0.00333600
 for in 0.04621300
 candidate_sigmaZ 0.00000600

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00004800
 power_call_rz_harmonics 0.00006100
 amoeba1 0.00239900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00021400
 amoeba2 0.00992100
 for num_harmonics 0.00084400
 for in 0.01350100
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.13869 s


width < len (6) in center_string(outstring, '879.71', width=5)

width < len (9) in center_string(outstring, '387043.88', width=6)

width < len (6) in center_string(outstring, '146.84', width=5)

width < len (8) in center_string(outstring, '10807.62', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9867(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9887(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.42', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM41.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM41.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM19.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM19.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00574500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062800
 amoeba2 0.03231300
 for num_harmonics 0.00331000
 for in 0.04225000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00095300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015300
 amoeba2 0.00571800
 for num_harmonics 0.00050400
 for in 0.00740900
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  28% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00016600
 amoeba1 0.00550000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056300
 amoeba2 0.02202200
 for num_harmonics 0.00191200
 for in 0.03017400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00085700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015800
 amoeba2 0.00541400
 for num_harmonics 0.00049300
 for in 0.00700300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00016600
 amoeba1 0.00357600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055500
 amoeba2 0.02137000
 for num_harmonics 0.00185400
 for in 0.02753200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00380100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03422200
 for num_harmonics 0.00190700
 for in 0.04076500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00047400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00241000
 for num_harmonics 0.00022900
 for in 0.00322900
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.15843 s


width < len (6) in center_string(outstring, '866.97', width=5)

width < len (9) in center_string(outstring, '375917.38', width=6)

width < len (6) in center_string(outstring, '152.19', width=5)

width < len (8) in center_string(outstring, '11607.58', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9905(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9916(69)', width=10)

width < len (14) in center_string(outstring, '0.0(1.7)x10^-1', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7225(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.8)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM19.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM19.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM8.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM8.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 31 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008500
 power_call_rz_harmonics 0.00015200
 amoeba1 0.00684500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00065000
 amoeba2 0.03161700
 for num_harmonics 0.00329600
 for in 0.04265600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  11% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00625300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055700
 amoeba2 0.02151100
 for num_harmonics 0.00187100
 for in 0.03045900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00095000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00017100
 amoeba2 0.00508600
 for num_harmonics 0.00047500
 for in 0.00676300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00357900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02457300
 for num_harmonics 0.00213600
 for in 0.03113600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00402100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02245500
 for num_harmonics 0.00203400
 for in 0.02934900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  55% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00376800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.00903600
 for num_harmonics 0.00095000
 for in 0.01419100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007800
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00192800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027600
 amoeba2 0.01133600
 for num_harmonics 0.00094100
 for in 0.01464000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  77% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00417000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057400
 amoeba2 0.03162600
 for num_harmonics 0.00191300
 for in 0.03855000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00042500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00257200
 for num_harmonics 0.00023300
 for in 0.00336400
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.21119 s


width < len (6) in center_string(outstring, '859.47', width=5)

width < len (9) in center_string(outstring, '369442.50', width=6)

width < len (6) in center_string(outstring, '148.91', width=5)

width < len (8) in center_string(outstring, '11160.41', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9874(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.7(6.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(4.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(3.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(4.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(5.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM8.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM8.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM42.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM42.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00578200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063600
 amoeba2 0.03071000
 for num_harmonics 0.00329700
 for in 0.04068100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002500
 power_call_rz_harmonics 0.00004800
 amoeba1 0.00099900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00482400
 for num_harmonics 0.00047300
 for in 0.00651900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003400
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00147900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00496100
 for num_harmonics 0.00046400
 for in 0.00711900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013300
 amoeba1 0.00434400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057300
 amoeba2 0.02844800
 for num_harmonics 0.00192200
 for in 0.03552700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  80% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00083400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014700
 amoeba2 0.00481000
 for num_harmonics 0.00047500
 for in 0.00634700
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.09625 s


width < len (6) in center_string(outstring, '881.59', width=5)

width < len (9) in center_string(outstring, '388699.38', width=6)

width < len (6) in center_string(outstring, '146.65', width=5)

width < len (8) in center_string(outstring, '10780.26', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9864(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.43', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM42.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM42.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM57.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM57.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00741800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066200
 amoeba2 0.02905100
 for num_harmonics 0.00326100
 for in 0.04064600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00084300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00469200
 for num_harmonics 0.00047800
 for in 0.00624200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00125000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00545800
 for num_harmonics 0.00046600
 for in 0.00739500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00421300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057600
 amoeba2 0.02745700
 for num_harmonics 0.00194900
 for in 0.03446500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00406400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02260100
 for num_harmonics 0.00188200
 for in 0.02937800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006500
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00218900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028300
 amoeba2 0.01103700
 for num_harmonics 0.00101000
 for in 0.01466300
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.13285 s


width < len (6) in center_string(outstring, '902.61', width=5)

width < len (9) in center_string(outstring, '407447.97', width=6)

width < len (6) in center_string(outstring, '136.33', width=5)

width < len (7) in center_string(outstring, '9319.25', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9848(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.44', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7197(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.4(1.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM57.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM57.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM30.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM30.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00657100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063000
 amoeba2 0.03049400
 for num_harmonics 0.00355600
 for in 0.04150400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00158000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00602600
 for num_harmonics 0.00047300
 for in 0.00830200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00455200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02179800
 for num_harmonics 0.00189000
 for in 0.02908200
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00047800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00242100
 for num_harmonics 0.00023300
 for in 0.00326700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00000300
 power_call_rz_harmonics 0.00008500
 amoeba1 0.00175800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028200
 amoeba2 0.01091400
 for num_harmonics 0.00099300
 for in 0.01404200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00412200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02995100
 for num_harmonics 0.00190900
 for in 0.03681900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13308 s


width < len (6) in center_string(outstring, '870.96', width=5)

width < len (9) in center_string(outstring, '379384.94', width=6)

width < len (6) in center_string(outstring, '150.53', width=5)

width < len (8) in center_string(outstring, '11356.92', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9890(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9880(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(3.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.31', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7211(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM30.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM30.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM27.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM27.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00866000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066100
 amoeba2 0.03198900
 for num_harmonics 0.00325500
 for in 0.04482100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00167600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00494500
 for num_harmonics 0.00050600
 for in 0.00735200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00655100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00054700
 amoeba2 0.02404000
 for num_harmonics 0.00190900
 for in 0.03331400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00107700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00493100
 for num_harmonics 0.00048900
 for in 0.00671900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00512600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057100
 amoeba2 0.03098400
 for num_harmonics 0.00191400
 for in 0.03885000
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.13111 s


width < len (6) in center_string(outstring, '867.55', width=5)

width < len (9) in center_string(outstring, '376423.34', width=6)

width < len (6) in center_string(outstring, '150.08', width=5)

width < len (8) in center_string(outstring, '11289.85', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9866(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9906(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7225(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM27.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM27.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM7.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM7.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 32 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00675100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063400
 amoeba2 0.03115700
 for num_harmonics 0.00336000
 for in 0.04215600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  11% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00333500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00058900
 amoeba2 0.02272900
 for num_harmonics 0.00198000
 for in 0.02891800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00091400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015600
 amoeba2 0.00494900
 for num_harmonics 0.00048000
 for in 0.00658000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00352200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02384900
 for num_harmonics 0.00214500
 for in 0.03036600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00520800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02598100
 for num_harmonics 0.00203300
 for in 0.03407000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  55% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00199400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028400
 amoeba2 0.01240400
 for num_harmonics 0.00097500
 for in 0.01581400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00190100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027800
 amoeba2 0.00925100
 for num_harmonics 0.00093700
 for in 0.01252600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  77% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00444900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02907400
 for num_harmonics 0.00192800
 for in 0.03628600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00438900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059300
 amoeba2 0.02361600
 for num_harmonics 0.00231200
 for in 0.03119500
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.23800 s


width < len (6) in center_string(outstring, '859.06', width=5)

width < len (9) in center_string(outstring, '369094.56', width=6)

width < len (6) in center_string(outstring, '148.20', width=5)

width < len (8) in center_string(outstring, '11054.53', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9871(69)', width=10)

width < len (14) in center_string(outstring, '-0.7(5.8)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.1(1.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(1.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.37', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7202(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.1)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM7.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM7.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM7.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM7.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 33 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00818800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062800
 amoeba2 0.03075500
 for num_harmonics 0.00328800
 for in 0.04311500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  11% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00013100
 amoeba1 0.00350400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02397800
 for num_harmonics 0.00189200
 for in 0.03018700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00091900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015400
 amoeba2 0.00521000
 for num_harmonics 0.00047500
 for in 0.00684000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00509100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02503200
 for num_harmonics 0.00213100
 for in 0.03310500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00800800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02431100
 for num_harmonics 0.00194400
 for in 0.03511000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  55% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00254500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01106200
 for num_harmonics 0.00096100
 for in 0.01500500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007300
 amoeba1 0.00324600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01100500
 for num_harmonics 0.00097300
 for in 0.01566500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  77% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00092700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015400
 amoeba2 0.00493200
 for num_harmonics 0.00047400
 for in 0.00658200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00502500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059600
 amoeba2 0.03645900
 for num_harmonics 0.00195900
 for in 0.04430800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.23000 s


width < len (6) in center_string(outstring, '858.89', width=5)

width < len (9) in center_string(outstring, '368945.62', width=6)

width < len (6) in center_string(outstring, '148.37', width=5)

width < len (8) in center_string(outstring, '11080.11', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9868(69)', width=10)

width < len (14) in center_string(outstring, '-0.7(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.1(1.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7206(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(5.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM7.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM7.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM64.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM64.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 35 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00714200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00067200
 amoeba2 0.03241400
 for num_harmonics 0.00329100
 for in 0.04377500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002200
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00047200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00264000
 for num_harmonics 0.00024000
 for in 0.00347200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00389200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00080000
 amoeba2 0.02389200
 for num_harmonics 0.00190000
 for in 0.03075500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010300
 power_call_rz_harmonics 0.00013300
 amoeba1 0.00436100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02242400
 for num_harmonics 0.00215400
 for in 0.02975000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00439900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059800
 amoeba2 0.03861400
 for num_harmonics 0.00198200
 for in 0.04584700
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.15365 s


width < len (6) in center_string(outstring, '912.16', width=5)

width < len (9) in center_string(outstring, '416113.53', width=6)

width < len (6) in center_string(outstring, '129.02', width=5)

width < len (7) in center_string(outstring, '8341.14', width=6)

width < len (7) in center_string(outstring, '1106.75', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9865(73)', width=10)

width < len (13) in center_string(outstring, '0.0(2.7)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7220(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM64.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM64.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM72.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM72.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00887100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063200
 amoeba2 0.03205600
 for num_harmonics 0.00324200
 for in 0.04505400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00066500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00199200
 for num_harmonics 0.00023200
 for in 0.00302700
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00005900
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00190800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01105000
 for num_harmonics 0.00099400
 for in 0.01437000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00402500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03139300
 for num_harmonics 0.00199400
 for in 0.03823500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00506800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059400
 amoeba2 0.02649700
 for num_harmonics 0.00265500
 for in 0.03509500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00487900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056300
 amoeba2 0.02505900
 for num_harmonics 0.00194400
 for in 0.03273000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.16857 s


width < len (6) in center_string(outstring, '938.46', width=5)

width < len (9) in center_string(outstring, '440457.34', width=6)

width < len (6) in center_string(outstring, '117.27', width=5)

width < len (7) in center_string(outstring, '6894.31', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(48)', width=10)

width < len (11) in center_string(outstring, ' 0.9860(76)', width=10)

width < len (14) in center_string(outstring, '-0.1(1.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.45', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7192(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM72.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM72.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM47.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM47.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 11 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010300
 power_call_rz_harmonics 0.00020900
 amoeba1 0.01172200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00154300
 amoeba2 0.03812200
 for num_harmonics 0.00330300
 for in 0.05502300
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00170300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014300
 amoeba2 0.00527100
 for num_harmonics 0.00047400
 for in 0.00767200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00432900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059600
 amoeba2 0.03158800
 for num_harmonics 0.00191900
 for in 0.03869900
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006500
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00188800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028500
 amoeba2 0.01259100
 for num_harmonics 0.00105100
 for in 0.01595800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00405500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055500
 amoeba2 0.02244700
 for num_harmonics 0.00194900
 for in 0.02927300
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.14668 s


width < len (6) in center_string(outstring, '885.99', width=5)

width < len (9) in center_string(outstring, '392591.50', width=6)

width < len (6) in center_string(outstring, '142.19', width=5)

width < len (8) in center_string(outstring, '10136.44', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9863(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.43', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7178(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM47.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM47.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM5.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM5.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 34 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00805800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062600
 amoeba2 0.03081800
 for num_harmonics 0.00331900
 for in 0.04307600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013900
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00641900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055700
 amoeba2 0.02136500
 for num_harmonics 0.00187400
 for in 0.03049700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00094500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014600
 amoeba2 0.00497400
 for num_harmonics 0.00047000
 for in 0.00661600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00517600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02384100
 for num_harmonics 0.00210700
 for in 0.03197200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00426900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059400
 amoeba2 0.02197300
 for num_harmonics 0.00194500
 for in 0.02906300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00000100
 power_call_rz_harmonics 0.00005300
 amoeba1 0.00098400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014500
 amoeba2 0.00473000
 for num_harmonics 0.00049000
 for in 0.00641000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003500
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00153200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00507800
 for num_harmonics 0.00047200
 for in 0.00730100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00430100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057100
 amoeba2 0.03259200
 for num_harmonics 0.00190500
 for in 0.03963700
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.19465 s


width < len (6) in center_string(outstring, '857.65', width=5)

width < len (9) in center_string(outstring, '367880.78', width=6)

width < len (6) in center_string(outstring, '148.06', width=5)

width < len (8) in center_string(outstring, '11033.48', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4979(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9867(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7225(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(9.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM5.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM5.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM0.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM0.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 43 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00724700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066400
 amoeba2 0.02883800
 for num_harmonics 0.00324100
 for in 0.04024600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  11% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00013000
 amoeba1 0.00519400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055800
 amoeba2 0.01983200
 for num_harmonics 0.00198500
 for in 0.02782200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  22% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008400
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00319100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057300
 amoeba2 0.02231300
 for num_harmonics 0.00188100
 for in 0.02818700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00448900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02483400
 for num_harmonics 0.00189200
 for in 0.03205700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013500
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00474700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02262000
 for num_harmonics 0.00188900
 for in 0.03009600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  55% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007300
 amoeba1 0.00239700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027700
 amoeba2 0.01044600
 for num_harmonics 0.00093800
 for in 0.01421700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007300
 amoeba1 0.00220300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01097400
 for num_harmonics 0.00094300
 for in 0.01455900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  77% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00154500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014600
 amoeba2 0.00617900
 for num_harmonics 0.00046400
 for in 0.00843000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00385800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02753100
 for num_harmonics 0.00191300
 for in 0.03413800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.22983 s


width < len (6) in center_string(outstring, '862.94', width=5)

width < len (9) in center_string(outstring, '372429.66', width=6)

width < len (6) in center_string(outstring, '147.57', width=5)

width < len (8) in center_string(outstring, '10961.64', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4982(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9882(70)', width=10)

width < len (14) in center_string(outstring, '-0.3(1.9)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.2(4.2)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.2(1.1)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(2.9)x10^2', width=12)

width < len (14) in center_string(outstring, ' 0.0(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.32', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7220(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.6)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.4)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM0.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM0.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM75.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM75.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00773100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066500
 amoeba2 0.03040200
 for num_harmonics 0.00324400
 for in 0.04229700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00059800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00254900
 for num_harmonics 0.00025300
 for in 0.00353800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00102500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00500100
 for num_harmonics 0.00047500
 for in 0.00671500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014100
 amoeba1 0.00414000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03124900
 for num_harmonics 0.00192600
 for in 0.03815300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018200
 amoeba1 0.00418900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058400
 amoeba2 0.02343600
 for num_harmonics 0.00184700
 for in 0.03025100
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12100 s


width < len (6) in center_string(outstring, '946.76', width=5)

width < len (9) in center_string(outstring, '448281.91', width=6)

width < len (6) in center_string(outstring, '111.82', width=5)

width < len (7) in center_string(outstring, '6270.58', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(49)', width=10)

width < len (11) in center_string(outstring, ' 0.9881(77)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7214(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM75.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM75.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM63.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM63.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 37 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00756600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063300
 amoeba2 0.02986700
 for num_harmonics 0.00322800
 for in 0.04154800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00069200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00224600
 for num_harmonics 0.00023600
 for in 0.00331300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00345600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02223700
 for num_harmonics 0.00188400
 for in 0.02840800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00415400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02543100
 for num_harmonics 0.00198100
 for in 0.03239400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00582400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02404400
 for num_harmonics 0.00209400
 for in 0.03279200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  62% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00642600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055600
 amoeba2 0.02652400
 for num_harmonics 0.00189200
 for in 0.03566600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00415500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059700
 amoeba2 0.02991700
 for num_harmonics 0.00191800
 for in 0.03685500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00484800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00058800
 amoeba2 0.02438300
 for num_harmonics 0.00196100
 for in 0.03204800
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.24310 s


width < len (6) in center_string(outstring, '911.90', width=5)

width < len (9) in center_string(outstring, '415883.00', width=6)

width < len (6) in center_string(outstring, '129.67', width=5)

width < len (7) in center_string(outstring, '8425.59', width=6)

width < len (7) in center_string(outstring, '1326.84', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9856(73)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(98)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7207(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(7.4)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM63.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM63.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM17.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM17.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00845700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066600
 amoeba2 0.02901900
 for num_harmonics 0.00338700
 for in 0.04178300
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00090000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015700
 amoeba2 0.00511400
 for num_harmonics 0.00047400
 for in 0.00672700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018200
 amoeba1 0.00358300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056300
 amoeba2 0.02052600
 for num_harmonics 0.00188200
 for in 0.02674500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00098000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015100
 amoeba2 0.00490800
 for num_harmonics 0.00047300
 for in 0.00659400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  80% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00423500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02869800
 for num_harmonics 0.00191600
 for in 0.03568300
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.11759 s


width < len (6) in center_string(outstring, '864.29', width=5)

width < len (9) in center_string(outstring, '373596.91', width=6)

width < len (6) in center_string(outstring, '151.48', width=5)

width < len (8) in center_string(outstring, '11500.57', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9882(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9922(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.9)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.2)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.0)x10^3', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7195(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.9)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM17.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM17.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM28.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM28.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015100
 amoeba1 0.00732000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063100
 amoeba2 0.02920100
 for num_harmonics 0.00326600
 for in 0.04066500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00127700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00523300
 for num_harmonics 0.00047700
 for in 0.00718900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011500
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00407600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02202000
 for num_harmonics 0.00189500
 for in 0.02880500
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00093300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015500
 amoeba2 0.00505300
 for num_harmonics 0.00047100
 for in 0.00669200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00434300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057000
 amoeba2 0.02631400
 for num_harmonics 0.00192100
 for in 0.03341700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  71% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00468900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055600
 amoeba2 0.02206500
 for num_harmonics 0.00185600
 for in 0.02943700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  85% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00373500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01141200
 for num_harmonics 0.00099100
 for in 0.01657500
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.16285 s


width < len (6) in center_string(outstring, '869.00', width=5)

width < len (9) in center_string(outstring, '377680.81', width=6)

width < len (6) in center_string(outstring, '150.21', width=5)

width < len (8) in center_string(outstring, '11308.37', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9914(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9878(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.31', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7218(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM28.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM28.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM8.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM8.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 28 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00672700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00064000
 amoeba2 0.02773400
 for num_harmonics 0.00324600
 for in 0.03860300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  11% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00118900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014300
 amoeba2 0.00434700
 for num_harmonics 0.00047700
 for in 0.00623800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018400
 amoeba1 0.00369500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060100
 amoeba2 0.02103800
 for num_harmonics 0.00197600
 for in 0.02750500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00138800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00501700
 for num_harmonics 0.00047400
 for in 0.00708600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00375600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057500
 amoeba2 0.02122500
 for num_harmonics 0.00214400
 for in 0.02798400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  55% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00014200
 amoeba1 0.00455000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02224900
 for num_harmonics 0.00204700
 for in 0.02970000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00204000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028200
 amoeba2 0.01115800
 for num_harmonics 0.00099100
 for in 0.01460800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  77% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00014100
 amoeba1 0.00418400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060500
 amoeba2 0.02705000
 for num_harmonics 0.00197200
 for in 0.03406700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00000100
 power_call_rz_harmonics 0.00005200
 amoeba1 0.00079200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014700
 amoeba2 0.00476000
 for num_harmonics 0.00049000
 for in 0.00625100
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.19213 s


width < len (6) in center_string(outstring, '860.66', width=5)

width < len (9) in center_string(outstring, '370470.38', width=6)

width < len (6) in center_string(outstring, '149.08', width=5)

width < len (8) in center_string(outstring, '11139.29', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9857(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9880(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.3(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.7(3.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(4.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(3.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7199(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(4.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM8.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM8.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM56.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM56.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00732700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062600
 amoeba2 0.02933300
 for num_harmonics 0.00325800
 for in 0.04079800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00081200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015000
 amoeba2 0.00549700
 for num_harmonics 0.00047100
 for in 0.00701300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00098400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00545900
 for num_harmonics 0.00049800
 for in 0.00714400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00398400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059900
 amoeba2 0.02678000
 for num_harmonics 0.00191200
 for in 0.03352900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.08852 s


width < len (6) in center_string(outstring, '901.70', width=5)

width < len (9) in center_string(outstring, '406633.22', width=6)

width < len (6) in center_string(outstring, '138.08', width=5)

width < len (7) in center_string(outstring, '9560.07', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9860(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.45', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7217(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM56.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM56.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM12.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM12.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 27 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015200
 amoeba1 0.00695800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00090700
 amoeba2 0.03999300
 for num_harmonics 0.00385600
 for in 0.05197000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00147600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014300
 amoeba2 0.00458600
 for num_harmonics 0.00047200
 for in 0.00674100
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00484800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00085700
 amoeba2 0.03589900
 for num_harmonics 0.00330700
 for in 0.04508900
 candidate_sigmaZ 0.00000600

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002900
 power_call_rz_harmonics 0.00005700
 amoeba1 0.00258800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00023300
 amoeba2 0.00691600
 for num_harmonics 0.00047000
 for in 0.01030500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00480100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02479700
 for num_harmonics 0.00203900
 for in 0.03245900
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00048200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00010800
 amoeba2 0.00377300
 for num_harmonics 0.00038100
 for in 0.00477500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00014700
 power_call_rz_harmonics 0.00020600
 amoeba1 0.00708500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00084700
 amoeba2 0.03716000
 for num_harmonics 0.00351400
 for in 0.04897300
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00014400
 power_call_rz_harmonics 0.00020400
 amoeba1 0.00675400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00090500
 amoeba2 0.04906400
 for num_harmonics 0.00324300
 for in 0.06033100
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.26076 s


width < len (6) in center_string(outstring, '861.60', width=5)

width < len (9) in center_string(outstring, '371272.31', width=6)

width < len (6) in center_string(outstring, '150.41', width=5)

width < len (8) in center_string(outstring, '11338.20', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9870(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9875(69)', width=10)

width < len (13) in center_string(outstring, '0.0(4.6)x10^3', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.5)x10^1', width=10)

width < len (14) in center_string(outstring, '-0.5(1.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(1.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(3.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7198(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(4.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM12.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM12.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM82.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM82.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 14 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00665600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00067800
 amoeba2 0.03195100
 for num_harmonics 0.00373700
 for in 0.04327800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00074800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00253600
 for num_harmonics 0.00024000
 for in 0.00366200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00179700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00505900
 for num_harmonics 0.00047300
 for in 0.00756600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00053300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00201100
 for num_harmonics 0.00023100
 for in 0.00289100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00403700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02222000
 for num_harmonics 0.00216900
 for in 0.02927600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.08672 s


width < len (6) in center_string(outstring, '958.73', width=5)

width < len (9) in center_string(outstring, '459681.09', width=6)

width < len (7) in center_string(outstring, '4816.70', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4969(51)', width=10)

width < len (11) in center_string(outstring, ' 0.9851(81)', width=10)

width < len (14) in center_string(outstring, ' 0.7(9.9)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM82.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM82.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM80.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM80.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 10 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00914500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062700
 amoeba2 0.03024900
 for num_harmonics 0.00323800
 for in 0.04351600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00052500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00276000
 for num_harmonics 0.00023400
 for in 0.00365800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00000200
 power_call_rz_harmonics 0.00008700
 amoeba1 0.00193900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027800
 amoeba2 0.01086000
 for num_harmonics 0.00093300
 for in 0.01410800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.06131 s


width < len (6) in center_string(outstring, '955.12', width=5)

width < len (9) in center_string(outstring, '456225.84', width=6)

width < len (6) in center_string(outstring, '101.69', width=5)

width < len (7) in center_string(outstring, '5188.19', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4969(51)', width=10)

width < len (11) in center_string(outstring, ' 0.9852(80)', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM80.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM80.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM74.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM74.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00801800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063600
 amoeba2 0.02884200
 for num_harmonics 0.00330800
 for in 0.04106000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00051500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007700
 amoeba2 0.00269600
 for num_harmonics 0.00023700
 for in 0.00358900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00110000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00483200
 for num_harmonics 0.00047500
 for in 0.00663100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00427300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03244100
 for num_harmonics 0.00190500
 for in 0.03945900
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.09078 s


width < len (6) in center_string(outstring, '943.41', width=5)

width < len (9) in center_string(outstring, '445112.84', width=6)

width < len (6) in center_string(outstring, '113.53', width=5)

width < len (7) in center_string(outstring, '6462.72', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(49)', width=10)

width < len (11) in center_string(outstring, ' 0.9889(76)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM74.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM74.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM1.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM1.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 45 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009000
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00585900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063300
 amoeba2 0.03020200
 for num_harmonics 0.00326100
 for in 0.04021000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  11% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00350000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055400
 amoeba2 0.02253000
 for num_harmonics 0.00196600
 for in 0.02883400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010000
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00314000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02106000
 for num_harmonics 0.00188400
 for in 0.02688500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00813300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02500500
 for num_harmonics 0.00189400
 for in 0.03587800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00380600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02201200
 for num_harmonics 0.00193600
 for in 0.02859400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  55% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006400
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00218600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00029200
 amoeba2 0.01131800
 for num_harmonics 0.00093300
 for in 0.01487200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00223600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01002300
 for num_harmonics 0.00093700
 for in 0.01363700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  77% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007000
 amoeba1 0.00257700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027800
 amoeba2 0.00954300
 for num_harmonics 0.00097700
 for in 0.01353300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  88% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00368800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057000
 amoeba2 0.03165100
 for num_harmonics 0.00189700
 for in 0.03805800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.24059 s


width < len (6) in center_string(outstring, '862.04', width=5)

width < len (9) in center_string(outstring, '371657.78', width=6)

width < len (6) in center_string(outstring, '148.00', width=5)

width < len (8) in center_string(outstring, '11024.37', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4982(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9878(70)', width=10)

width < len (14) in center_string(outstring, '-0.3(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.2(1.2)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(2.2)x10^2', width=12)

width < len (14) in center_string(outstring, ' 0.0(3.4)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.33', width=5)

width < len (11) in center_string(outstring, ' 0.5128(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7197(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.5)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.2)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM1.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM1.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM49.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM49.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00777800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066500
 amoeba2 0.03081900
 for num_harmonics 0.00332100
 for in 0.04283600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00083000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014700
 amoeba2 0.00493400
 for num_harmonics 0.00050900
 for in 0.00650300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006700
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00310800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027800
 amoeba2 0.01074700
 for num_harmonics 0.00093600
 for in 0.01521500
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00399700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060000
 amoeba2 0.03021600
 for num_harmonics 0.00193100
 for in 0.03701100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00431900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059800
 amoeba2 0.02600500
 for num_harmonics 0.00171700
 for in 0.03290700
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13453 s


width < len (6) in center_string(outstring, '887.85', width=5)

width < len (9) in center_string(outstring, '394239.25', width=6)

width < len (6) in center_string(outstring, '141.99', width=5)

width < len (8) in center_string(outstring, '10107.64', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9861(71)', width=10)

width < len (14) in center_string(outstring, ' 0.1(1.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7220(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.0)x10^1', width=12)

width < len (14) in center_string(outstring, '0.0(9.0)x10^-1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM49.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM49.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM18.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM18.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009300
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00570000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063200
 amoeba2 0.03161900
 for num_harmonics 0.00344800
 for in 0.04165900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00080800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00520600
 for num_harmonics 0.00047600
 for in 0.00671900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018100
 amoeba1 0.00605800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060200
 amoeba2 0.02380000
 for num_harmonics 0.00196700
 for in 0.03262000
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00101000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00533200
 for num_harmonics 0.00046800
 for in 0.00701600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00499500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060500
 amoeba2 0.03013000
 for num_harmonics 0.00199300
 for in 0.03796200
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.12603 s


width < len (6) in center_string(outstring, '864.20', width=5)

width < len (9) in center_string(outstring, '373519.81', width=6)

width < len (6) in center_string(outstring, '151.92', width=5)

width < len (8) in center_string(outstring, '11566.87', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9879(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9914(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.0)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.39', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM18.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM18.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM36.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM36.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 23 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000200


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015000
 amoeba1 0.00631300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062800
 amoeba2 0.02871800
 for num_harmonics 0.00325000
 for in 0.03915700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00095800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00511800
 for num_harmonics 0.00050400
 for in 0.00678400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000500
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00357600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02354500
 for num_harmonics 0.00187700
 for in 0.02972800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00299900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01006300
 for num_harmonics 0.00097600
 for in 0.01445600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002100
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00075400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00006900
 amoeba2 0.00255700
 for num_harmonics 0.00023700
 for in 0.00366100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013300
 amoeba1 0.00375800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03015100
 for num_harmonics 0.00196500
 for in 0.03668200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006700
 amoeba1 0.00178700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01019500
 for num_harmonics 0.00093100
 for in 0.01332800
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.14387 s


width < len (6) in center_string(outstring, '873.74', width=5)

width < len (9) in center_string(outstring, '381805.75', width=6)

width < len (6) in center_string(outstring, '148.46', width=5)

width < len (8) in center_string(outstring, '11047.24', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9860(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9879(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.39', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7197(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.1)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM36.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM36.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM4.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM4.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 34 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00838000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066300
 amoeba2 0.03206900
 for num_harmonics 0.00325500
 for in 0.04462100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00317300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058800
 amoeba2 0.02022100
 for num_harmonics 0.00197800
 for in 0.02624300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008400
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00346300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055600
 amoeba2 0.02217800
 for num_harmonics 0.00198600
 for in 0.02841400
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00483700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02328100
 for num_harmonics 0.00188300
 for in 0.03082800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00363100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059100
 amoeba2 0.02277700
 for num_harmonics 0.00219900
 for in 0.02948000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006500
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00273200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01097300
 for num_harmonics 0.00094700
 for in 0.01507600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00099500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00534900
 for num_harmonics 0.00049200
 for in 0.00707100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012000
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00374200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03311600
 for num_harmonics 0.00202400
 for in 0.03971600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.22153 s


width < len (6) in center_string(outstring, '858.92', width=5)

width < len (9) in center_string(outstring, '368966.53', width=6)

width < len (6) in center_string(outstring, '148.79', width=5)

width < len (8) in center_string(outstring, '11142.92', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4980(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9873(69)', width=10)

width < len (14) in center_string(outstring, ' 0.2(3.2)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.1)x10^3', width=12)

width < len (14) in center_string(outstring, ' 0.0(3.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7218(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.7)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.6)x10^3', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM4.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM4.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM33.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM33.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00633100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062700
 amoeba2 0.03088600
 for num_harmonics 0.00344000
 for in 0.04153900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00161600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00503900
 for num_harmonics 0.00050800
 for in 0.00737600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00016500
 amoeba1 0.00436400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.01969800
 for num_harmonics 0.00188100
 for in 0.02668000
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00073400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00228900
 for num_harmonics 0.00023000
 for in 0.00338800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00437300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02607500
 for num_harmonics 0.00192100
 for in 0.03320500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  83% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012500
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00424300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055500
 amoeba2 0.02434800
 for num_harmonics 0.00196800
 for in 0.03138600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.14363 s


width < len (6) in center_string(outstring, '875.22', width=5)

width < len (9) in center_string(outstring, '383106.19', width=6)

width < len (6) in center_string(outstring, '150.83', width=5)

width < len (8) in center_string(outstring, '11401.76', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9867(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9879(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.39', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7219(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.1(1.9)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.2(1.9)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM33.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM33.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM78.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM78.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 9 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00702600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00064700
 amoeba2 0.02764400
 for num_harmonics 0.00325400
 for in 0.03882600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00060000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00238500
 for num_harmonics 0.00023700
 for in 0.00335800
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.04221 s


width < len (6) in center_string(outstring, '949.83', width=5)

width < len (9) in center_string(outstring, '451185.16', width=6)

width < len (6) in center_string(outstring, '106.11', width=5)

width < len (7) in center_string(outstring, '5647.99', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(50)', width=10)

width < len (11) in center_string(outstring, ' 0.9852(79)', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM78.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM78.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM41.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM41.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00024500
 amoeba1 0.01222300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00101500
 amoeba2 0.03451000
 for num_harmonics 0.00325300
 for in 0.05138600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003900
 amoeba1 0.00081100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014700
 amoeba2 0.00474600
 for num_harmonics 0.00048100
 for in 0.00626900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00596700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059200
 amoeba2 0.02159300
 for num_harmonics 0.00189500
 for in 0.03032600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00147000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00540300
 for num_harmonics 0.00047300
 for in 0.00758200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00484000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057000
 amoeba2 0.03472400
 for num_harmonics 0.00193400
 for in 0.04233600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00148500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00470700
 for num_harmonics 0.00047900
 for in 0.00689200
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.14485 s


width < len (6) in center_string(outstring, '878.04', width=5)

width < len (9) in center_string(outstring, '385574.19', width=6)

width < len (6) in center_string(outstring, '146.97', width=5)

width < len (8) in center_string(outstring, '10826.71', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9884(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9922(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.42', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7216(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM41.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM41.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM50.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM50.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00016300
 amoeba1 0.00767400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063900
 amoeba2 0.03017300
 for num_harmonics 0.00326400
 for in 0.04201200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003800
 amoeba1 0.00157100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00481800
 for num_harmonics 0.00047000
 for in 0.00708100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00168800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028500
 amoeba2 0.01117900
 for num_harmonics 0.00099700
 for in 0.01430700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00406400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060400
 amoeba2 0.03093100
 for num_harmonics 0.00191900
 for in 0.03777100
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.10121 s


width < len (6) in center_string(outstring, '892.41', width=5)

width < len (9) in center_string(outstring, '398298.97', width=6)

width < len (6) in center_string(outstring, '142.10', width=5)

width < len (8) in center_string(outstring, '10123.16', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9868(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.49', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7199(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM50.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM50.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM5.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM5.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 34 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00761500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063400
 amoeba2 0.03166800
 for num_harmonics 0.00332700
 for in 0.04350000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  10% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00321000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059200
 amoeba2 0.02192500
 for num_harmonics 0.00187200
 for in 0.02788500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00109400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014300
 amoeba2 0.00480800
 for num_harmonics 0.00047300
 for in 0.00660000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  30% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00548700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057400
 amoeba2 0.02527100
 for num_harmonics 0.00211700
 for in 0.03373300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00446300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02286100
 for num_harmonics 0.00194500
 for in 0.03012000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00000100
 power_call_rz_harmonics 0.00005200
 amoeba1 0.00084900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014600
 amoeba2 0.00459100
 for num_harmonics 0.00046600
 for in 0.00611300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00191800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00461900
 for num_harmonics 0.00047300
 for in 0.00724600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  69% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00483900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057000
 amoeba2 0.02697400
 for num_harmonics 0.00191700
 for in 0.03457100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00000200
 power_call_rz_harmonics 0.00008600
 amoeba1 0.00296500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01022400
 for num_harmonics 0.00092600
 for in 0.01449000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  89% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00448000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02164900
 for num_harmonics 0.00200900
 for in 0.02898100
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.23333 s


width < len (6) in center_string(outstring, '858.69', width=5)

width < len (9) in center_string(outstring, '368770.50', width=6)

width < len (6) in center_string(outstring, '148.01', width=5)

width < len (8) in center_string(outstring, '11027.06', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4979(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9872(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.37', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7207(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.7)x10^2', width=12)

width < len (14) in center_string(outstring, '0.0(2.3)x10^-1', width=12)

width < len (14) in center_string(outstring, ' 0.1(1.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.4(1.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM5.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM5.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM83.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM83.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00686900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066200
 amoeba2 0.02981400
 for num_harmonics 0.00328200
 for in 0.04087900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00053900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00230900
 for num_harmonics 0.00023700
 for in 0.00322100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00139300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00504400
 for num_harmonics 0.00050000
 for in 0.00717100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00435700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02229400
 for num_harmonics 0.00186500
 for in 0.02935600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00000200
 power_call_rz_harmonics 0.00005200
 amoeba1 0.00088100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015600
 amoeba2 0.00455500
 for num_harmonics 0.00046900
 for in 0.00612200
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.08680 s


width < len (6) in center_string(outstring, '961.30', width=5)

width < len (9) in center_string(outstring, '462153.97', width=6)

width < len (7) in center_string(outstring, '4594.07', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4969(52)', width=10)

width < len (11) in center_string(outstring, ' 0.9834(82)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM83.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM83.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM81.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM81.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 11 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00016200
 amoeba1 0.00616800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063000
 amoeba2 0.02872600
 for num_harmonics 0.00323300
 for in 0.03901800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00051400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00269200
 for num_harmonics 0.00025300
 for in 0.00359700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003600
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00146800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00486400
 for num_harmonics 0.00046600
 for in 0.00701700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00209000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028200
 amoeba2 0.01021800
 for num_harmonics 0.00092800
 for in 0.01367500
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.06335 s


width < len (6) in center_string(outstring, '956.40', width=5)

width < len (9) in center_string(outstring, '457452.09', width=6)

width < len (6) in center_string(outstring, '100.15', width=5)

width < len (7) in center_string(outstring, '5032.82', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4969(51)', width=10)

width < len (11) in center_string(outstring, ' 0.9850(80)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM81.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM81.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM75.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM75.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00857900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063000
 amoeba2 0.03435300
 for num_harmonics 0.00332100
 for in 0.04713800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00047600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00235700
 for num_harmonics 0.00024000
 for in 0.00321000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00100300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00518000
 for num_harmonics 0.00047100
 for in 0.00688300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00396700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03548300
 for num_harmonics 0.00190300
 for in 0.04218900
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.09946 s


width < len (6) in center_string(outstring, '945.09', width=5)

width < len (9) in center_string(outstring, '446701.22', width=6)

width < len (6) in center_string(outstring, '112.38', width=5)

width < len (7) in center_string(outstring, '6333.12', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(49)', width=10)

width < len (11) in center_string(outstring, ' 0.9866(77)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7188(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM75.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM75.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM23.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM23.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00830300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063200
 amoeba2 0.03267700
 for num_harmonics 0.00324400
 for in 0.04511000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00149100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00492300
 for num_harmonics 0.00048200
 for in 0.00711600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00637000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02091500
 for num_harmonics 0.00189500
 for in 0.03002600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00085100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014700
 amoeba2 0.00525700
 for num_harmonics 0.00047200
 for in 0.00680800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00220500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00029800
 amoeba2 0.01088300
 for num_harmonics 0.00093700
 for in 0.01448000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00411600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03484100
 for num_harmonics 0.00191300
 for in 0.04170800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00365300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02544300
 for num_harmonics 0.00188200
 for in 0.03182000
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.17713 s


width < len (6) in center_string(outstring, '867.14', width=5)

width < len (9) in center_string(outstring, '376064.00', width=6)

width < len (6) in center_string(outstring, '150.64', width=5)

width < len (8) in center_string(outstring, '11373.41', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9900(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9868(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(7.8)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.33', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7190(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.7)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.1)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM23.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM23.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM4.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM4.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 34 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00016400
 amoeba1 0.00601100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066000
 amoeba2 0.03096100
 for num_harmonics 0.00331000
 for in 0.04120400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  11% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011800
 power_call_rz_harmonics 0.00013000
 amoeba1 0.00313300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055800
 amoeba2 0.01886400
 for num_harmonics 0.00190900
 for in 0.02471900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008100
 power_call_rz_harmonics 0.00013100
 amoeba1 0.00361900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02325800
 for num_harmonics 0.00197400
 for in 0.02962800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014800
 amoeba1 0.00440200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059100
 amoeba2 0.02233500
 for num_harmonics 0.00194300
 for in 0.02954800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00013300
 amoeba1 0.00573200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059700
 amoeba2 0.02666600
 for num_harmonics 0.00214600
 for in 0.03539700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  55% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00176000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027800
 amoeba2 0.01294900
 for num_harmonics 0.00097400
 for in 0.01609800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003500
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00137600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00526900
 for num_harmonics 0.00049900
 for in 0.00736000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  77% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010300
 power_call_rz_harmonics 0.00013000
 amoeba1 0.00406100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02373800
 for num_harmonics 0.00189700
 for in 0.03050600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013400
 amoeba1 0.00395100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00061600
 amoeba2 0.02698500
 for num_harmonics 0.00200000
 for in 0.03379600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.24835 s


width < len (6) in center_string(outstring, '857.78', width=5)

width < len (9) in center_string(outstring, '367994.12', width=6)

width < len (6) in center_string(outstring, '148.53', width=5)

width < len (8) in center_string(outstring, '11103.75', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4980(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9857(69)', width=10)

width < len (14) in center_string(outstring, ' 0.2(3.2)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(6.5)x10^2', width=12)

width < len (14) in center_string(outstring, ' 0.0(4.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7188(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.5)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.8)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM4.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM4.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM52.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM52.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015300
 amoeba1 0.00701200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063200
 amoeba2 0.02877400
 for num_harmonics 0.00325000
 for in 0.03991700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00083800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00435800
 for num_harmonics 0.00047500
 for in 0.00587500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00190800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028300
 amoeba2 0.01051400
 for num_harmonics 0.00097800
 for in 0.01382100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013400
 amoeba1 0.00405900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057500
 amoeba2 0.02920400
 for num_harmonics 0.00199800
 for in 0.03607800
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.09574 s


width < len (6) in center_string(outstring, '893.94', width=5)

width < len (9) in center_string(outstring, '399664.47', width=6)

width < len (6) in center_string(outstring, '140.90', width=5)

width < len (7) in center_string(outstring, '9953.08', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9862(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7205(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM52.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM52.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM13.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM13.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 24 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00762500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00064900
 amoeba2 0.03434500
 for num_harmonics 0.00335800
 for in 0.04623100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00151900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00434100
 for num_harmonics 0.00051600
 for in 0.00659800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00016600
 amoeba1 0.00486200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02195600
 for num_harmonics 0.00190400
 for in 0.02946000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00120500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00545300
 for num_harmonics 0.00049800
 for in 0.00735800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00456400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055700
 amoeba2 0.02685100
 for num_harmonics 0.00201800
 for in 0.03427300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00045900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00268600
 for num_harmonics 0.00024400
 for in 0.00350700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00402200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057400
 amoeba2 0.02822000
 for num_harmonics 0.00194100
 for in 0.03502600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.16252 s


width < len (6) in center_string(outstring, '861.77', width=5)

width < len (9) in center_string(outstring, '371422.44', width=6)

width < len (6) in center_string(outstring, '150.88', width=5)

width < len (8) in center_string(outstring, '11409.12', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9871(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9880(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(5.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7206(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.9)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM13.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM13.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM57.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM57.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00714100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066400
 amoeba2 0.03159900
 for num_harmonics 0.00324700
 for in 0.04290200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003800
 amoeba1 0.00157200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00455700
 for num_harmonics 0.00047700
 for in 0.00683200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00301400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00030600
 amoeba2 0.01029600
 for num_harmonics 0.00094300
 for in 0.01471700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00373100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02945100
 for num_harmonics 0.00193100
 for in 0.03595100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  80% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00181800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01023200
 for num_harmonics 0.00095800
 for in 0.01344700
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.11390 s


width < len (6) in center_string(outstring, '902.59', width=5)

width < len (9) in center_string(outstring, '407434.91', width=6)

width < len (6) in center_string(outstring, '135.70', width=5)

width < len (7) in center_string(outstring, '9233.66', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9865(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7229(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM57.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM57.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM60.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM60.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 32 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00016000
 amoeba1 0.00739000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062600
 amoeba2 0.02968100
 for num_harmonics 0.00326300
 for in 0.04121800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00177500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00554800
 for num_harmonics 0.00048400
 for in 0.00803000
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00395800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02291500
 for num_harmonics 0.00189000
 for in 0.02959200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00384800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056400
 amoeba2 0.04378800
 for num_harmonics 0.00198900
 for in 0.05045800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12934 s


width < len (6) in center_string(outstring, '908.00', width=5)

width < len (9) in center_string(outstring, '412333.97', width=6)

width < len (6) in center_string(outstring, '131.68', width=5)

width < len (7) in center_string(outstring, '8696.59', width=6)

width < len (7) in center_string(outstring, '1076.73', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9862(73)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7216(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM60.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM60.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM77.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM77.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 7 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00855300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063000
 amoeba2 0.03248200
 for num_harmonics 0.00325100
 for in 0.04516900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00084200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00247800
 for num_harmonics 0.00023200
 for in 0.00369000
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00417900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03244500
 for num_harmonics 0.00191400
 for in 0.03937300
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00225000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00029700
 amoeba2 0.01019500
 for num_harmonics 0.00094800
 for in 0.01384700
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.10212 s


width < len (6) in center_string(outstring, '948.73', width=5)

width < len (9) in center_string(outstring, '450140.84', width=6)

width < len (6) in center_string(outstring, '108.89', width=5)

width < len (7) in center_string(outstring, '5946.27', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(49)', width=10)

width < len (11) in center_string(outstring, ' 0.9856(78)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.50', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7194(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM77.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM77.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM62.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM62.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 39 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00017400
 amoeba1 0.00717700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062800
 amoeba2 0.02993600
 for num_harmonics 0.00326800
 for in 0.04128200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  12% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00075600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00441700
 for num_harmonics 0.00047600
 for in 0.00588000
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00410800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02230900
 for num_harmonics 0.00188100
 for in 0.02912600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00500500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02177600
 for num_harmonics 0.00190100
 for in 0.02951200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00483300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057000
 amoeba2 0.02677500
 for num_harmonics 0.00305100
 for in 0.03550300
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00014000
 power_call_rz_harmonics 0.00018300
 amoeba1 0.00575200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00081700
 amoeba2 0.03599300
 for num_harmonics 0.00333800
 for in 0.04624000
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00014700
 power_call_rz_harmonics 0.00021900
 amoeba1 0.00674900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00092900
 amoeba2 0.04475100
 for num_harmonics 0.00337900
 for in 0.05618800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00016500
 power_call_rz_harmonics 0.00021800
 amoeba1 0.01104500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00093700
 amoeba2 0.03562000
 for num_harmonics 0.00386600
 for in 0.05186300
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.29569 s


width < len (6) in center_string(outstring, '909.88', width=5)

width < len (9) in center_string(outstring, '414042.03', width=6)

width < len (6) in center_string(outstring, '130.96', width=5)

width < len (7) in center_string(outstring, '8602.00', width=6)

width < len (7) in center_string(outstring, '1376.14', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9884(73)', width=10)

width < len (11) in center_string(outstring, ' 0.4979(98)', width=10)

width < len (14) in center_string(outstring, '-0.2(1.4)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.3)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7211(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM62.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM62.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM61.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM61.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 37 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00790100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00078400
 amoeba2 0.02972700
 for num_harmonics 0.00323800
 for in 0.04190400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00088300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015800
 amoeba2 0.00573700
 for num_harmonics 0.00047600
 for in 0.00733600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00377300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02468300
 for num_harmonics 0.00189700
 for in 0.03118300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00573600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02395800
 for num_harmonics 0.00190000
 for in 0.03243000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00399500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02955800
 for num_harmonics 0.00192800
 for in 0.03631800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00408100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02300400
 for num_harmonics 0.00191700
 for in 0.02981000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.17904 s


width < len (6) in center_string(outstring, '908.12', width=5)

width < len (9) in center_string(outstring, '412438.22', width=6)

width < len (6) in center_string(outstring, '131.62', width=5)

width < len (7) in center_string(outstring, '8688.65', width=6)

width < len (7) in center_string(outstring, '1212.83', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9851(73)', width=10)

width < len (11) in center_string(outstring, ' 0.4991(98)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7197(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM61.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM61.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM16.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM16.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00548900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063100
 amoeba2 0.03116400
 for num_harmonics 0.00325300
 for in 0.04079300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003800
 amoeba1 0.00144200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014300
 amoeba2 0.00413600
 for num_harmonics 0.00048100
 for in 0.00628200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000500
 power_call_rz_harmonics 0.00018400
 amoeba1 0.00427100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059600
 amoeba2 0.02039300
 for num_harmonics 0.00199200
 for in 0.02744800
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00086300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00016000
 amoeba2 0.00471600
 for num_harmonics 0.00047900
 for in 0.00628500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00014100
 amoeba1 0.00448900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00061800
 amoeba2 0.03127600
 for num_harmonics 0.00191300
 for in 0.03856600
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.11942 s


width < len (6) in center_string(outstring, '863.03', width=5)

width < len (9) in center_string(outstring, '372508.75', width=6)

width < len (6) in center_string(outstring, '151.45', width=5)

width < len (8) in center_string(outstring, '11496.25', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9882(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9891(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7218(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM16.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM16.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM40.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM40.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00689700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063600
 amoeba2 0.02941900
 for num_harmonics 0.00324600
 for in 0.04045300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00084700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015000
 amoeba2 0.00567500
 for num_harmonics 0.00047200
 for in 0.00722300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00014500
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00344400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02066400
 for num_harmonics 0.00189500
 for in 0.02685700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00095700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015300
 amoeba2 0.00493300
 for num_harmonics 0.00050400
 for in 0.00664300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003600
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00085500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015800
 amoeba2 0.00486600
 for num_harmonics 0.00047500
 for in 0.00643500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012500
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00420800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02583200
 for num_harmonics 0.00188600
 for in 0.03276500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00585100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02939100
 for num_harmonics 0.00193100
 for in 0.03801000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.15846 s


width < len (6) in center_string(outstring, '874.01', width=5)

width < len (9) in center_string(outstring, '382048.81', width=6)

width < len (6) in center_string(outstring, '148.10', width=5)

width < len (8) in center_string(outstring, '10993.71', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9902(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9903(70)', width=10)

width < len (14) in center_string(outstring, '0.0(7.1)x10^-1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.39', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7219(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.1)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM40.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM40.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM29.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM29.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00566500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063000
 amoeba2 0.02813900
 for num_harmonics 0.00333400
 for in 0.03802300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00187400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00557100
 for num_harmonics 0.00048100
 for in 0.00814800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00401800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059300
 amoeba2 0.02599300
 for num_harmonics 0.00189600
 for in 0.03278000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00047400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00270000
 for num_harmonics 0.00023300
 for in 0.00354200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00488600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057200
 amoeba2 0.03072000
 for num_harmonics 0.00191500
 for in 0.03835900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00576600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02756700
 for num_harmonics 0.00217300
 for in 0.03635600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00372800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057100
 amoeba2 0.02457500
 for num_harmonics 0.00203400
 for in 0.03117300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00090600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015000
 amoeba2 0.00499700
 for num_harmonics 0.00046500
 for in 0.00661200
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.19507 s


width < len (6) in center_string(outstring, '870.63', width=5)

width < len (9) in center_string(outstring, '379095.19', width=6)

width < len (6) in center_string(outstring, '150.82', width=5)

width < len (8) in center_string(outstring, '11399.98', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9908(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9892(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.29', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7205(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(2.1)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.9(4.8)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM29.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM29.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM16.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM16.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 22 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00591400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00067300
 amoeba2 0.03421700
 for num_harmonics 0.00325100
 for in 0.04431000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00113300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00561400
 for num_harmonics 0.00048000
 for in 0.00744900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000300
 power_call_rz_harmonics 0.00018200
 amoeba1 0.00468800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.01943300
 for num_harmonics 0.00188900
 for in 0.02677100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00101000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015800
 amoeba2 0.00569800
 for num_harmonics 0.00047400
 for in 0.00742200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006600
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00244500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028300
 amoeba2 0.01128000
 for num_harmonics 0.00093100
 for in 0.01508500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00400400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057000
 amoeba2 0.02531500
 for num_harmonics 0.00193600
 for in 0.03209300
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13319 s


width < len (6) in center_string(outstring, '863.30', width=5)

width < len (9) in center_string(outstring, '372742.81', width=6)

width < len (6) in center_string(outstring, '151.23', width=5)

width < len (8) in center_string(outstring, '11462.27', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9916(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9880(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.5)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7222(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM16.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM16.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM37.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM37.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 22 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00615200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066500
 amoeba2 0.02959900
 for num_harmonics 0.00336000
 for in 0.04002900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003800
 amoeba1 0.00121800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015200
 amoeba2 0.00464400
 for num_harmonics 0.00047700
 for in 0.00655800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00499500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058900
 amoeba2 0.02281800
 for num_harmonics 0.00200400
 for in 0.03068800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006400
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00221700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028300
 amoeba2 0.01027200
 for num_harmonics 0.00093800
 for in 0.01385500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00050100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00269400
 for num_harmonics 0.00024700
 for in 0.00358000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00410500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057600
 amoeba2 0.02767800
 for num_harmonics 0.00195800
 for in 0.03457000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  85% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00102100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014300
 amoeba2 0.00503100
 for num_harmonics 0.00049100
 for in 0.00678200
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.13613 s


width < len (6) in center_string(outstring, '873.09', width=5)

width < len (9) in center_string(outstring, '381245.91', width=6)

width < len (6) in center_string(outstring, '148.87', width=5)

width < len (8) in center_string(outstring, '11108.66', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9888(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9922(70)', width=10)

width < len (14) in center_string(outstring, ' 0.1(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.38', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.1)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM37.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM37.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM50.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM50.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 19 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00972800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00067100
 amoeba2 0.03311700
 for num_harmonics 0.00323600
 for in 0.04700600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00151200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00453500
 for num_harmonics 0.00050400
 for in 0.00675700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003600
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00090300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015300
 amoeba2 0.00460900
 for num_harmonics 0.00046100
 for in 0.00620600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00438700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057200
 amoeba2 0.02919700
 for num_harmonics 0.00191500
 for in 0.03633900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.09635 s


width < len (6) in center_string(outstring, '890.60', width=5)

width < len (9) in center_string(outstring, '396687.47', width=6)

width < len (6) in center_string(outstring, '141.49', width=5)

width < len (8) in center_string(outstring, '10035.95', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9871(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7193(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM50.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM50.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM35.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM35.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 22 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00685500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00065200
 amoeba2 0.02865500
 for num_harmonics 0.00327000
 for in 0.03968500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00145300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00534000
 for num_harmonics 0.00047700
 for in 0.00749100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013500
 amoeba1 0.00427800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02210900
 for num_harmonics 0.00188500
 for in 0.02911800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00043800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00243600
 for num_harmonics 0.00024000
 for in 0.00324600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002000
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00035100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00006800
 amoeba2 0.00199600
 for num_harmonics 0.00025800
 for in 0.00271800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  83% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00431000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060100
 amoeba2 0.03639800
 for num_harmonics 0.00191900
 for in 0.04348200
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.12580 s


width < len (6) in center_string(outstring, '872.75', width=5)

width < len (9) in center_string(outstring, '380949.59', width=6)

width < len (6) in center_string(outstring, '148.60', width=5)

width < len (8) in center_string(outstring, '11068.06', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9903(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9878(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.37', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7216(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM35.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM35.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM11.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM11.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 25 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009400
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00766200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063400
 amoeba2 0.02762700
 for num_harmonics 0.00332500
 for in 0.03951100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  12% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00088000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00525300
 for num_harmonics 0.00047100
 for in 0.00683400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018100
 amoeba1 0.00376600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02306900
 for num_harmonics 0.00187800
 for in 0.02946400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002000
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00093500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015500
 amoeba2 0.00471400
 for num_harmonics 0.00046500
 for in 0.00633100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00421400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02276600
 for num_harmonics 0.00211500
 for in 0.02993500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00533300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02406600
 for num_harmonics 0.00204200
 for in 0.03226900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00386100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03562500
 for num_harmonics 0.00190700
 for in 0.04222700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00053500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00228200
 for num_harmonics 0.00022800
 for in 0.00316100
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.18981 s


width < len (6) in center_string(outstring, '861.74', width=5)

width < len (9) in center_string(outstring, '371398.91', width=6)

width < len (6) in center_string(outstring, '149.52', width=5)

width < len (8) in center_string(outstring, '11205.65', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9916(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9900(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(3.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.4(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(3.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.7(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.8(4.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(3.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(5.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(3.9)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM11.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM11.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM22.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM22.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00022400
 amoeba1 0.01031400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00088900
 amoeba2 0.04608000
 for num_harmonics 0.00566400
 for in 0.06329700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003000
 power_call_rz_harmonics 0.00005700
 amoeba1 0.00114000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00023300
 amoeba2 0.00844900
 for num_harmonics 0.00082600
 for in 0.01075100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00016600
 power_call_rz_harmonics 0.00021900
 amoeba1 0.00632300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00093100
 amoeba2 0.04177700
 for num_harmonics 0.00333700
 for in 0.05276700
 candidate_sigmaZ 0.00000600

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003000
 power_call_rz_harmonics 0.00005700
 amoeba1 0.00228400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00022900
 amoeba2 0.00903400
 for num_harmonics 0.00082800
 for in 0.01247100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00014400
 power_call_rz_harmonics 0.00021700
 amoeba1 0.00640300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00094100
 amoeba2 0.04546000
 for num_harmonics 0.00336400
 for in 0.05654000
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008700
 power_call_rz_harmonics 0.00011100
 amoeba1 0.00367200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00046100
 amoeba2 0.02087100
 for num_harmonics 0.00166700
 for in 0.02687900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.22281 s


width < len (6) in center_string(outstring, '867.33', width=5)

width < len (9) in center_string(outstring, '376230.75', width=6)

width < len (6) in center_string(outstring, '151.76', width=5)

width < len (8) in center_string(outstring, '11542.02', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9887(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9931(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.33', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM22.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM22.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM1.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM1.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 42 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00817100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066400
 amoeba2 0.03173600
 for num_harmonics 0.00326300
 for in 0.04408800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  11% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00745000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02173300
 for num_harmonics 0.00189100
 for in 0.03191600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010000
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00353100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02075600
 for num_harmonics 0.00186500
 for in 0.02695600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00718300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02419600
 for num_harmonics 0.00197800
 for in 0.03420100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00494500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02365800
 for num_harmonics 0.00188300
 for in 0.03133200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  55% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00197400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01252100
 for num_harmonics 0.00097500
 for in 0.01590700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006400
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00218000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028200
 amoeba2 0.01026000
 for num_harmonics 0.00094000
 for in 0.01380700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  77% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00090100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015400
 amoeba2 0.00531000
 for num_harmonics 0.00046400
 for in 0.00691100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00429900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02952100
 for num_harmonics 0.00190900
 for in 0.03656400
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.24177 s


width < len (6) in center_string(outstring, '860.96', width=5)

width < len (9) in center_string(outstring, '370721.56', width=6)

width < len (6) in center_string(outstring, '147.85', width=5)

width < len (8) in center_string(outstring, '11002.49', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4982(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9854(70)', width=10)

width < len (14) in center_string(outstring, ' 0.2(1.9)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(2.1)x10^2', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '0.0(3.5)x10^-1', width=10)

width < len (14) in center_string(outstring, ' 0.0(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.32', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7204(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.6)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(9.6)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM1.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM1.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM45.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM45.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 11 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00733800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063100
 amoeba2 0.03286300
 for num_harmonics 0.00342200
 for in 0.04450900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00220200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00458000
 for num_harmonics 0.00047500
 for in 0.00748500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00403600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02783500
 for num_harmonics 0.00192300
 for in 0.03462900
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.08666 s


width < len (6) in center_string(outstring, '882.71', width=5)

width < len (9) in center_string(outstring, '389689.91', width=6)

width < len (6) in center_string(outstring, '143.86', width=5)

width < len (8) in center_string(outstring, '10374.97', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9867(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.41', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7216(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM45.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM45.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM82.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM82.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 11 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00830700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063000
 amoeba2 0.02985500
 for num_harmonics 0.00330100
 for in 0.04234700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00080900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007600
 amoeba2 0.00249500
 for num_harmonics 0.00023700
 for in 0.00367900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00137000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00610400
 for num_harmonics 0.00046600
 for in 0.00817700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00461400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060900
 amoeba2 0.03022400
 for num_harmonics 0.00297200
 for in 0.03870200
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.09295 s


width < len (6) in center_string(outstring, '957.29', width=5)

width < len (9) in center_string(outstring, '458305.69', width=6)

width < len (7) in center_string(outstring, '4972.82', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4969(51)', width=10)

width < len (11) in center_string(outstring, ' 0.9860(80)', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM82.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM82.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM72.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM72.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 14 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00616600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00065700
 amoeba2 0.03045000
 for num_harmonics 0.00324600
 for in 0.04077400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00063800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00212700
 for num_harmonics 0.00023900
 for in 0.00314200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00005900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00174100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01071400
 for num_harmonics 0.00093700
 for in 0.01380900
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00420700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03100200
 for num_harmonics 0.00190800
 for in 0.03795300
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.09572 s


width < len (6) in center_string(outstring, '938.92', width=5)

width < len (9) in center_string(outstring, '440884.22', width=6)

width < len (6) in center_string(outstring, '117.71', width=5)

width < len (7) in center_string(outstring, '6946.52', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(48)', width=10)

width < len (11) in center_string(outstring, ' 0.9869(76)', width=10)

width < len (14) in center_string(outstring, '-0.1(1.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7222(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM72.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM72.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM67.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM67.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00786500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063200
 amoeba2 0.02936500
 for num_harmonics 0.00325900
 for in 0.04137400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00082000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00216800
 for num_harmonics 0.00023800
 for in 0.00336300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00216600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.00978800
 for num_harmonics 0.00098900
 for in 0.01338300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00641400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056300
 amoeba2 0.03933200
 for num_harmonics 0.00338800
 for in 0.04995400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00014800
 power_call_rz_harmonics 0.00021800
 amoeba1 0.00700000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00093400
 amoeba2 0.03646100
 for num_harmonics 0.00340700
 for in 0.04818200
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00010800
 amoeba1 0.00640900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00045800
 amoeba2 0.02070700
 for num_harmonics 0.00166200
 for in 0.02942000
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.18576 s


width < len (6) in center_string(outstring, '922.28', width=5)

width < len (9) in center_string(outstring, '425401.59', width=6)

width < len (6) in center_string(outstring, '124.25', width=5)

width < len (7) in center_string(outstring, '7737.78', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9863(74)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7214(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, '0.0(9.0)x10^-1', width=12)

width < len (14) in center_string(outstring, '0.0(7.0)x10^-1', width=12)

width < len (14) in center_string(outstring, ' 0.1(2.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM67.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM67.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM23.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM23.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00819800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066100
 amoeba2 0.02848300
 for num_harmonics 0.00324700
 for in 0.04084100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00087900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015600
 amoeba2 0.00473700
 for num_harmonics 0.00050000
 for in 0.00635300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012000
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00625100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058000
 amoeba2 0.02279300
 for num_harmonics 0.00188200
 for in 0.03177100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00082900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014500
 amoeba2 0.00544900
 for num_harmonics 0.00049800
 for in 0.00700200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  57% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006400
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00373400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01164800
 for num_harmonics 0.00093300
 for in 0.01673600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00416600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060100
 amoeba2 0.02821900
 for num_harmonics 0.00201600
 for in 0.03527000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00387200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02275400
 for num_harmonics 0.00187400
 for in 0.02932500
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.16737 s


width < len (6) in center_string(outstring, '866.42', width=5)

width < len (9) in center_string(outstring, '375440.84', width=6)

width < len (6) in center_string(outstring, '151.22', width=5)

width < len (8) in center_string(outstring, '11461.34', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9854(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9889(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7211(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(5.8)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM23.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM23.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM70.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM70.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 14 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00596200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00065900
 amoeba2 0.03045800
 for num_harmonics 0.00331000
 for in 0.04064400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00041500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007600
 amoeba2 0.00197600
 for num_harmonics 0.00023600
 for in 0.00276600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008100
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00176700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01068700
 for num_harmonics 0.00099000
 for in 0.01388500
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00405700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00059600
 amoeba2 0.03181300
 for num_harmonics 0.00191200
 for in 0.03863200
 candidate_sigmaZ 0.00000400

Amount of optimization complete = 100%

for1 cost 0.09597 s


width < len (6) in center_string(outstring, '932.87', width=5)

width < len (9) in center_string(outstring, '435226.56', width=6)

width < len (6) in center_string(outstring, '121.43', width=5)

width < len (7) in center_string(outstring, '7391.26', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(48)', width=10)

width < len (11) in center_string(outstring, ' 0.9852(75)', width=10)

width < len (13) in center_string(outstring, '0.0(3.0)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7213(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM70.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM70.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM40.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM40.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 19 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010700
 power_call_rz_harmonics 0.00021600
 amoeba1 0.00709400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063000
 amoeba2 0.02739000
 for num_harmonics 0.00381100
 for in 0.03926000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00128000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00546000
 for num_harmonics 0.00071600
 for in 0.00766400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00015800
 power_call_rz_harmonics 0.00018300
 amoeba1 0.00575800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02155000
 for num_harmonics 0.00189200
 for in 0.03011300
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00099900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00016200
 amoeba2 0.00603700
 for num_harmonics 0.00047200
 for in 0.00776700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00145000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00615800
 for num_harmonics 0.00046800
 for in 0.00831300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012500
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00412800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02888400
 for num_harmonics 0.00193500
 for in 0.03578800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00400900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00058200
 amoeba2 0.02453700
 for num_harmonics 0.00278300
 for in 0.03218200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012500
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00457700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02354400
 for num_harmonics 0.00186600
 for in 0.03081500
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.19199 s


width < len (6) in center_string(outstring, '873.99', width=5)

width < len (9) in center_string(outstring, '382031.75', width=6)

width < len (6) in center_string(outstring, '147.46', width=5)

width < len (8) in center_string(outstring, '10899.14', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9883(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9904(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.40', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7202(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.8(1.5)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM40.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM40.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM60.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM60.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 30 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00586600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062600
 amoeba2 0.03116300
 for num_harmonics 0.00323600
 for in 0.04114200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00080900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015000
 amoeba2 0.00542200
 for num_harmonics 0.00047700
 for in 0.00694000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007000
 amoeba1 0.00171200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00029500
 amoeba2 0.01177800
 for num_harmonics 0.00094100
 for in 0.01488300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00433600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02959800
 for num_harmonics 0.00191600
 for in 0.03668300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00368200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060300
 amoeba2 0.02396500
 for num_harmonics 0.00220700
 for in 0.03074100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006600
 power_call_rz_harmonics 0.00007000
 amoeba1 0.00237700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.00986600
 for num_harmonics 0.00094100
 for in 0.01360800
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.14405 s


width < len (6) in center_string(outstring, '906.37', width=5)

width < len (9) in center_string(outstring, '410851.50', width=6)

width < len (6) in center_string(outstring, '132.34', width=5)

width < len (7) in center_string(outstring, '8783.69', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9876(73)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7199(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM60.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM60.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM14.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM14.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 22 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00764700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063100
 amoeba2 0.02852200
 for num_harmonics 0.00327700
 for in 0.04032900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00112300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00441500
 for num_harmonics 0.00050600
 for in 0.00626600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00016700
 amoeba1 0.00366900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02049300
 for num_harmonics 0.00188300
 for in 0.02678400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00145900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00462600
 for num_harmonics 0.00047500
 for in 0.00678300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00404600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057600
 amoeba2 0.02523100
 for num_harmonics 0.00227200
 for in 0.03238900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00395700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03000200
 for num_harmonics 0.00200900
 for in 0.03680600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.14942 s


width < len (6) in center_string(outstring, '861.24', width=5)

width < len (9) in center_string(outstring, '370962.56', width=6)

width < len (6) in center_string(outstring, '151.35', width=5)

width < len (8) in center_string(outstring, '11480.14', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9871(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9866(69)', width=10)

width < len (14) in center_string(outstring, '0.0(1.6)x10^-1', width=12)

width < len (14) in center_string(outstring, '-0.1(8.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7211(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM14.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM14.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM66.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM66.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 24 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00734800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066900
 amoeba2 0.03043200
 for num_harmonics 0.00324100
 for in 0.04194400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00055700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00258200
 for num_harmonics 0.00023600
 for in 0.00351300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00283500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00029300
 amoeba2 0.01030600
 for num_harmonics 0.00098900
 for in 0.01458200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00440500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03648700
 for num_harmonics 0.00196300
 for in 0.04367700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006400
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00216000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01135600
 for num_harmonics 0.00092800
 for in 0.01486600
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.11863 s


width < len (6) in center_string(outstring, '918.81', width=5)

width < len (9) in center_string(outstring, '422206.31', width=6)

width < len (6) in center_string(outstring, '125.40', width=5)

width < len (7) in center_string(outstring, '7880.96', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9853(74)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7198(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.1)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM66.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM66.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM76.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM76.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 10 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008500
 power_call_rz_harmonics 0.00015200
 amoeba1 0.00943200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063300
 amoeba2 0.02979400
 for num_harmonics 0.00333100
 for in 0.04343600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002100
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00065900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00231600
 for num_harmonics 0.00023800
 for in 0.00333200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006900
 amoeba1 0.00200400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028600
 amoeba2 0.01115100
 for num_harmonics 0.00094600
 for in 0.01452400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00423100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057200
 amoeba2 0.03560500
 for num_harmonics 0.00192600
 for in 0.04257500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006900
 amoeba1 0.00192400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027800
 amoeba2 0.01062000
 for num_harmonics 0.00097600
 for in 0.01393700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006500
 power_call_rz_harmonics 0.00008000
 amoeba1 0.00200400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01203600
 for num_harmonics 0.00104800
 for in 0.01551800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014600
 amoeba1 0.00473000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02109000
 for num_harmonics 0.00198800
 for in 0.02864700
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.16204 s


width < len (6) in center_string(outstring, '947.89', width=5)

width < len (9) in center_string(outstring, '449352.69', width=6)

width < len (6) in center_string(outstring, '109.90', width=5)

width < len (7) in center_string(outstring, '6056.73', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(49)', width=10)

width < len (11) in center_string(outstring, ' 0.9833(78)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7223(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.4(3.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM76.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM76.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM70.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM70.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 14 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015900
 amoeba1 0.00824000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00067400
 amoeba2 0.02908900
 for num_harmonics 0.00333300
 for in 0.04159500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00046800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007600
 amoeba2 0.00253400
 for num_harmonics 0.00023500
 for in 0.00337600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007300
 amoeba1 0.00171100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028300
 amoeba2 0.01085900
 for num_harmonics 0.00092600
 for in 0.01393800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014200
 amoeba1 0.00554200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062200
 amoeba2 0.02718400
 for num_harmonics 0.00191600
 for in 0.03553600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.09449 s


width < len (6) in center_string(outstring, '935.25', width=5)

width < len (9) in center_string(outstring, '437444.91', width=6)

width < len (6) in center_string(outstring, '120.40', width=5)

width < len (7) in center_string(outstring, '7265.83', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(48)', width=10)

width < len (11) in center_string(outstring, ' 0.9863(75)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM70.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM70.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM58.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM58.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 27 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00596100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062700
 amoeba2 0.02948800
 for num_harmonics 0.00332300
 for in 0.03965300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00110000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00510000
 for num_harmonics 0.00047800
 for in 0.00688300
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00289100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01246000
 for num_harmonics 0.00097400
 for in 0.01674100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010900
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00420400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03389600
 for num_harmonics 0.00204300
 for in 0.04096500
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.10428 s


width < len (6) in center_string(outstring, '903.97', width=5)

width < len (9) in center_string(outstring, '408678.38', width=6)

width < len (6) in center_string(outstring, '134.57', width=5)

width < len (7) in center_string(outstring, '9081.39', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9869(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.43', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7180(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM58.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM58.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM49.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM49.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 19 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00855100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066600
 amoeba2 0.02806700
 for num_harmonics 0.00338400
 for in 0.04092400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00068600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00485000
 for num_harmonics 0.00047400
 for in 0.00624100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006700
 amoeba1 0.00166500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028400
 amoeba2 0.01081800
 for num_harmonics 0.00094500
 for in 0.01384700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00413000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03042100
 for num_harmonics 0.00197200
 for in 0.03736000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00131000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00013500
 amoeba2 0.00480400
 for num_harmonics 0.00047700
 for in 0.00680900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.10523 s


width < len (6) in center_string(outstring, '891.30', width=5)

width < len (9) in center_string(outstring, '397311.44', width=6)

width < len (6) in center_string(outstring, '142.18', width=5)

width < len (8) in center_string(outstring, '10134.10', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9856(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7194(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM49.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM49.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM2.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM2.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 37 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00784700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00065800
 amoeba2 0.03223000
 for num_harmonics 0.00328400
 for in 0.04427400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00344000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02020900
 for num_harmonics 0.00189000
 for in 0.02638200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008000
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00302600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02490000
 for num_harmonics 0.00194200
 for in 0.03064500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00469300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02329700
 for num_harmonics 0.00189400
 for in 0.03071100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00364000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02608000
 for num_harmonics 0.00212500
 for in 0.03269400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00327800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00029600
 amoeba2 0.01029800
 for num_harmonics 0.00094600
 for in 0.01497900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00310400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01013300
 for num_harmonics 0.00095600
 for in 0.01463500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012000
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00525500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057000
 amoeba2 0.02832400
 for num_harmonics 0.00191100
 for in 0.03632800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.23073 s


width < len (6) in center_string(outstring, '860.46', width=5)

width < len (9) in center_string(outstring, '370296.56', width=6)

width < len (6) in center_string(outstring, '148.42', width=5)

width < len (8) in center_string(outstring, '11087.25', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4981(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9861(70)', width=10)

width < len (14) in center_string(outstring, ' 0.2(3.0)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(2.0)x10^2', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, '0.0(6.2)x10^-1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.6)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.7)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM2.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM2.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM39.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM39.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00802900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066500
 amoeba2 0.02822900
 for num_harmonics 0.00322700
 for in 0.04040400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00177300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00487400
 for num_harmonics 0.00047800
 for in 0.00734800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00587900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056300
 amoeba2 0.02188100
 for num_harmonics 0.00189100
 for in 0.03049200
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006600
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00197700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01118400
 for num_harmonics 0.00093600
 for in 0.01452100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  57% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00100500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00013800
 amoeba2 0.00524100
 for num_harmonics 0.00047300
 for in 0.00695200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  71% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00412700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060000
 amoeba2 0.03115100
 for num_harmonics 0.00196700
 for in 0.03811300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00431500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02270000
 for num_harmonics 0.00195700
 for in 0.02979900
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.16769 s


width < len (6) in center_string(outstring, '872.83', width=5)

width < len (9) in center_string(outstring, '381018.94', width=6)

width < len (6) in center_string(outstring, '148.00', width=5)

width < len (8) in center_string(outstring, '10978.93', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9869(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9878(70)', width=10)

width < len (13) in center_string(outstring, '0.0(1.3)x10^2', width=12)

width < len (14) in center_string(outstring, '0.0(7.0)x10^-1', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.39', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7200(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM39.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM39.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM37.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM37.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00712400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066800
 amoeba2 0.03465600
 for num_harmonics 0.00334400
 for in 0.04604600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00084700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00505000
 for num_harmonics 0.00048100
 for in 0.00659300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013400
 amoeba1 0.00528900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02372100
 for num_harmonics 0.00196500
 for in 0.03181800
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00365600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00030100
 amoeba2 0.01147700
 for num_harmonics 0.00093300
 for in 0.01652600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00069600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00250700
 for num_harmonics 0.00023200
 for in 0.00357000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00389500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00058000
 amoeba2 0.03755100
 for num_harmonics 0.00192800
 for in 0.04422500
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.14884 s


width < len (6) in center_string(outstring, '873.33', width=5)

width < len (9) in center_string(outstring, '381448.88', width=6)

width < len (6) in center_string(outstring, '148.15', width=5)

width < len (8) in center_string(outstring, '11000.74', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9871(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9926(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.37', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7216(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.1)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM37.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM37.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM78.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM78.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 9 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00787300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062800
 amoeba2 0.03482100
 for num_harmonics 0.00323100
 for in 0.04680500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00056800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00238400
 for num_harmonics 0.00023900
 for in 0.00332800
 candidate_sigmaZ 0.00000000

Amount of optimization complete = 100%

for1 cost 0.05016 s


width < len (6) in center_string(outstring, '951.79', width=5)

width < len (9) in center_string(outstring, '453054.75', width=6)

width < len (6) in center_string(outstring, '107.22', width=5)

width < len (7) in center_string(outstring, '5766.14', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(50)', width=10)

width < len (11) in center_string(outstring, ' 0.9869(78)', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM78.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM78.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM52.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM52.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00910100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00067800
 amoeba2 0.03016200
 for num_harmonics 0.00325200
 for in 0.04344700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00106900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00453400
 for num_harmonics 0.00047500
 for in 0.00629900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00186400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01089000
 for num_harmonics 0.00094500
 for in 0.01413900
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00377600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02819100
 for num_harmonics 0.00192900
 for in 0.03473100
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.09865 s


width < len (6) in center_string(outstring, '890.78', width=5)

width < len (9) in center_string(outstring, '396848.25', width=6)

width < len (6) in center_string(outstring, '139.95', width=5)

width < len (7) in center_string(outstring, '9819.95', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9859(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.49', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7195(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM52.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM52.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM18.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM18.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00687200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00067500
 amoeba2 0.02995000
 for num_harmonics 0.00325900
 for in 0.04100700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00123800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00523700
 for num_harmonics 0.00047500
 for in 0.00717200
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018300
 amoeba1 0.00467900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02166700
 for num_harmonics 0.00191200
 for in 0.02901600
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00109000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00488000
 for num_harmonics 0.00047300
 for in 0.00666400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00455900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03179300
 for num_harmonics 0.00190500
 for in 0.03909200
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00138800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00565600
 for num_harmonics 0.00046800
 for in 0.00773200
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.13074 s


width < len (6) in center_string(outstring, '864.15', width=5)

width < len (9) in center_string(outstring, '373477.84', width=6)

width < len (6) in center_string(outstring, '151.95', width=5)

width < len (8) in center_string(outstring, '11571.17', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9895(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9916(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.37', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7201(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM18.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM18.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM65.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM65.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 24 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00708400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063000
 amoeba2 0.03012900
 for num_harmonics 0.00324200
 for in 0.04134000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003900
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00040700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007600
 amoeba2 0.00214300
 for num_harmonics 0.00023800
 for in 0.00292800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00182800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028200
 amoeba2 0.01192500
 for num_harmonics 0.00094600
 for in 0.01513900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00488300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02872800
 for num_harmonics 0.00192600
 for in 0.03637500
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.09583 s


width < len (6) in center_string(outstring, '917.63', width=5)

width < len (9) in center_string(outstring, '421120.00', width=6)

width < len (6) in center_string(outstring, '125.99', width=5)

width < len (7) in center_string(outstring, '7954.71', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9842(74)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM65.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM65.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM25.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM25.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00601500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00067100
 amoeba2 0.03208500
 for num_harmonics 0.00326100
 for in 0.04228800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00147900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015200
 amoeba2 0.00531000
 for num_harmonics 0.00048200
 for in 0.00750600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00600800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060200
 amoeba2 0.02668200
 for num_harmonics 0.00193600
 for in 0.03551400
 candidate_sigmaZ 0.00000500

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00080300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015100
 amoeba2 0.00535100
 for num_harmonics 0.00050600
 for in 0.00689400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010700
 power_call_rz_harmonics 0.00014100
 amoeba1 0.00424200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060500
 amoeba2 0.03131000
 for num_harmonics 0.00197200
 for in 0.03838300
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.13064 s


width < len (6) in center_string(outstring, '866.50', width=5)

width < len (9) in center_string(outstring, '375511.78', width=6)

width < len (6) in center_string(outstring, '150.65', width=5)

width < len (8) in center_string(outstring, '11374.14', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9864(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9873(70)', width=10)

width < len (14) in center_string(outstring, '0.0(6.3)x10^-1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.4)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.3(3.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.33', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7196(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM25.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM25.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM46.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM46.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 11 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00715600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062800
 amoeba2 0.02920100
 for num_harmonics 0.00360100
 for in 0.04084200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00098100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015300
 amoeba2 0.00512700
 for num_harmonics 0.00047500
 for in 0.00681800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00422600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02805700
 for num_harmonics 0.00219100
 for in 0.03531000
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.08301 s


width < len (6) in center_string(outstring, '880.79', width=5)

width < len (9) in center_string(outstring, '387994.09', width=6)

width < len (6) in center_string(outstring, '143.01', width=5)

width < len (8) in center_string(outstring, '10252.48', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9876(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.41', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7201(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM46.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM46.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM19.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM19.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00717700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066700
 amoeba2 0.03155200
 for num_harmonics 0.00325100
 for in 0.04290000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00179300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014300
 amoeba2 0.00502800
 for num_harmonics 0.00049900
 for in 0.00754400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00016700
 amoeba1 0.00326000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02334400
 for num_harmonics 0.00190400
 for in 0.02925300
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00094500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015500
 amoeba2 0.00455000
 for num_harmonics 0.00047300
 for in 0.00620400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00429500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060900
 amoeba2 0.02825300
 for num_harmonics 0.00192200
 for in 0.03535000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00044000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00275400
 for num_harmonics 0.00023400
 for in 0.00354700
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.12486 s


width < len (6) in center_string(outstring, '865.05', width=5)

width < len (9) in center_string(outstring, '374258.09', width=6)

width < len (6) in center_string(outstring, '151.92', width=5)

width < len (8) in center_string(outstring, '11567.56', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9893(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9901(69)', width=10)

width < len (14) in center_string(outstring, '0.0(6.3)x10^-1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7202(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.8)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM19.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM19.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM20.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM20.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00556800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00067700
 amoeba2 0.02811200
 for num_harmonics 0.00323900
 for in 0.03784900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00150300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00553000
 for num_harmonics 0.00047500
 for in 0.00773000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018200
 amoeba1 0.00359700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02224500
 for num_harmonics 0.00193600
 for in 0.02853600
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00144900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00489600
 for num_harmonics 0.00046700
 for in 0.00702500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000200
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00058200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00260500
 for num_harmonics 0.00024900
 for in 0.00355400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00550500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056600
 amoeba2 0.03872600
 for num_harmonics 0.00191300
 for in 0.04697900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13173 s


width < len (6) in center_string(outstring, '866.15', width=5)

width < len (9) in center_string(outstring, '375210.62', width=6)

width < len (6) in center_string(outstring, '151.90', width=5)

width < len (8) in center_string(outstring, '11563.24', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9875(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9901(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7196(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.8)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM20.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM20.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM54.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM54.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00787800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066600
 amoeba2 0.03481000
 for num_harmonics 0.00324900
 for in 0.04685800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00132200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00422200
 for num_harmonics 0.00050300
 for in 0.00627000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006400
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00294700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00029600
 amoeba2 0.01074600
 for num_harmonics 0.00094100
 for in 0.01507300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00729300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057000
 amoeba2 0.03087900
 for num_harmonics 0.00190300
 for in 0.04091500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00210400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00030500
 amoeba2 0.01148800
 for num_harmonics 0.00092800
 for in 0.01498300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006600
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00201500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01103200
 for num_harmonics 0.00094100
 for in 0.01441400
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13857 s


width < len (6) in center_string(outstring, '895.43', width=5)

width < len (9) in center_string(outstring, '400995.09', width=6)

width < len (6) in center_string(outstring, '138.47', width=5)

width < len (7) in center_string(outstring, '9613.85', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9869(72)', width=10)

width < len (14) in center_string(outstring, ' 0.1(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.50', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7201(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.0)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(4.8)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM54.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM54.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM34.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM34.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 22 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009600
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00761100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00067100
 amoeba2 0.02837200
 for num_harmonics 0.00326000
 for in 0.04017600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00167300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00459300
 for num_harmonics 0.00047600
 for in 0.00696500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00547600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00061000
 amoeba2 0.02205600
 for num_harmonics 0.00196000
 for in 0.03038100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003600
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00040900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00249500
 for num_harmonics 0.00023400
 for in 0.00327400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00060000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00198700
 for num_harmonics 0.00023200
 for in 0.00295300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00446500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02941100
 for num_harmonics 0.00191300
 for in 0.03662600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12043 s


width < len (6) in center_string(outstring, '873.34', width=5)

width < len (9) in center_string(outstring, '381458.41', width=6)

width < len (6) in center_string(outstring, '149.63', width=5)

width < len (8) in center_string(outstring, '11221.17', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9865(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9871(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.37', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7192(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM34.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM34.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM79.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM79.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 9 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00016500
 amoeba1 0.00670900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00065800
 amoeba2 0.03007200
 for num_harmonics 0.00325600
 for in 0.04095900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00082200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00240800
 for num_harmonics 0.00023900
 for in 0.00360800
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.04459 s


width < len (6) in center_string(outstring, '953.09', width=5)

width < len (9) in center_string(outstring, '454289.09', width=6)

width < len (6) in center_string(outstring, '103.58', width=5)

width < len (7) in center_string(outstring, '5382.98', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(50)', width=10)

width < len (11) in center_string(outstring, ' 0.9858(79)', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM79.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM79.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM71.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM71.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 14 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008500
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00738300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063200
 amoeba2 0.02782400
 for num_harmonics 0.00324700
 for in 0.03933700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00047000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00225000
 for num_harmonics 0.00023900
 for in 0.00309600
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006700
 amoeba1 0.00164000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01139200
 for num_harmonics 0.00093600
 for in 0.01438400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013100
 amoeba1 0.00398100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03125900
 for num_harmonics 0.00192600
 for in 0.03797200
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.09483 s


width < len (6) in center_string(outstring, '936.53', width=5)

width < len (9) in center_string(outstring, '438639.91', width=6)

width < len (6) in center_string(outstring, '119.69', width=5)

width < len (7) in center_string(outstring, '7181.19', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(48)', width=10)

width < len (11) in center_string(outstring, ' 0.9864(75)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM71.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM71.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM76.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM76.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 12 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00791900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063200
 amoeba2 0.02895300
 for num_harmonics 0.00333100
 for in 0.04108900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003800
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00074100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00223900
 for num_harmonics 0.00025200
 for in 0.00336900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00110900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015200
 amoeba2 0.00522900
 for num_harmonics 0.00050600
 for in 0.00706300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00403500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056500
 amoeba2 0.03474000
 for num_harmonics 0.00191500
 for in 0.04150800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00505700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02200200
 for num_harmonics 0.00186700
 for in 0.02975600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00485400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055500
 amoeba2 0.02397300
 for num_harmonics 0.00201600
 for in 0.03168100
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.15453 s


width < len (6) in center_string(outstring, '947.06', width=5)

width < len (9) in center_string(outstring, '448561.88', width=6)

width < len (6) in center_string(outstring, '110.24', width=5)

width < len (7) in center_string(outstring, '6094.64', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(49)', width=10)

width < len (11) in center_string(outstring, ' 0.9885(77)', width=10)

width < len (14) in center_string(outstring, '0.0(6.5)x10^-1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7228(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(5.0)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(3.2)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.2(1.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.4(8.9)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM76.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM76.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM34.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM34.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00728100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062900
 amoeba2 0.02800600
 for num_harmonics 0.00331100
 for in 0.03948100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00125500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00458200
 for num_harmonics 0.00047700
 for in 0.00652800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018200
 amoeba1 0.00556800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02567900
 for num_harmonics 0.00188600
 for in 0.03388500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00068200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00252200
 for num_harmonics 0.00023300
 for in 0.00357300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00429200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03053900
 for num_harmonics 0.00200700
 for in 0.03767400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  83% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00041400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00210700
 for num_harmonics 0.00023500
 for in 0.00289200
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12409 s


width < len (6) in center_string(outstring, '874.26', width=5)

width < len (9) in center_string(outstring, '382266.25', width=6)

width < len (6) in center_string(outstring, '151.16', width=5)

width < len (8) in center_string(outstring, '11452.20', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9879(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9917(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.38', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7240(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM34.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM34.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM28.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM28.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00684000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062800
 amoeba2 0.02999000
 for num_harmonics 0.00323700
 for in 0.04094600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00084600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00708100
 for num_harmonics 0.00049000
 for in 0.00864700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00366600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02318400
 for num_harmonics 0.00189200
 for in 0.02956500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  37% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00099900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00472800
 for num_harmonics 0.00047000
 for in 0.00642800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00480400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059900
 amoeba2 0.02721100
 for num_harmonics 0.00192200
 for in 0.03480500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00468000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055600
 amoeba2 0.02334600
 for num_harmonics 0.00196100
 for in 0.03082500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00000100
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00099600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015200
 amoeba2 0.00557300
 for num_harmonics 0.00046500
 for in 0.00723000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00382000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055700
 amoeba2 0.02588400
 for num_harmonics 0.00197000
 for in 0.03249800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.19102 s


width < len (6) in center_string(outstring, '869.45', width=5)

width < len (9) in center_string(outstring, '378066.94', width=6)

width < len (6) in center_string(outstring, '150.64', width=5)

width < len (8) in center_string(outstring, '11373.84', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9946(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9897(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.31', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7216(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.3)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.1(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM28.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM28.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM45.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM45.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 12 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00861500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063100
 amoeba2 0.02836500
 for num_harmonics 0.00324200
 for in 0.04110700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00140600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00531800
 for num_harmonics 0.00047300
 for in 0.00741900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00420400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060800
 amoeba2 0.03022700
 for num_harmonics 0.00192800
 for in 0.03723400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00114300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00512800
 for num_harmonics 0.00046900
 for in 0.00697500
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.09278 s


width < len (6) in center_string(outstring, '884.65', width=5)

width < len (9) in center_string(outstring, '391401.53', width=6)

width < len (6) in center_string(outstring, '143.84', width=5)

width < len (8) in center_string(outstring, '10371.99', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9888(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.41', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM45.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM45.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM3.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM3.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 36 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00949800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062900
 amoeba2 0.03049900
 for num_harmonics 0.00331700
 for in 0.04419800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  11% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00325800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055700
 amoeba2 0.02314200
 for num_harmonics 0.00192700
 for in 0.02916600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  22% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010000
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00347900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02426100
 for num_harmonics 0.00189800
 for in 0.03044100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00852400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02518800
 for num_harmonics 0.00191400
 for in 0.03647100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00614600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02620300
 for num_harmonics 0.00216900
 for in 0.03536800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  55% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007300
 amoeba1 0.00198100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00029600
 amoeba2 0.01187200
 for num_harmonics 0.00096600
 for in 0.01527500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00192500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01086000
 for num_harmonics 0.00095500
 for in 0.01417900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  77% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00389600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060100
 amoeba2 0.03715400
 for num_harmonics 0.00203800
 for in 0.04396000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  88% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00005100
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00241500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028400
 amoeba2 0.01145300
 for num_harmonics 0.00106200
 for in 0.01534300
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.26449 s


width < len (6) in center_string(outstring, '861.16', width=5)

width < len (9) in center_string(outstring, '370893.69', width=6)

width < len (6) in center_string(outstring, '147.71', width=5)

width < len (8) in center_string(outstring, '10981.56', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4981(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9868(69)', width=10)

width < len (13) in center_string(outstring, '0.0(8.7)x10^2', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.9)x10^1', width=12)

width < len (14) in center_string(outstring, '0.0(5.9)x10^-1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.37', width=5)

width < len (11) in center_string(outstring, ' 0.5128(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7217(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.6)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(4.0)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM3.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM3.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM38.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM38.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00703000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066800
 amoeba2 0.02978700
 for num_harmonics 0.00384100
 for in 0.04157900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00088100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015700
 amoeba2 0.00499200
 for num_harmonics 0.00047500
 for in 0.00657100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00494500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056300
 amoeba2 0.02133300
 for num_harmonics 0.00188600
 for in 0.02901000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008100
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00327500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01007500
 for num_harmonics 0.00094500
 for in 0.01473500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00045900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00254200
 for num_harmonics 0.00023200
 for in 0.00336700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00366400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03042500
 for num_harmonics 0.00193100
 for in 0.03685500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00453400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02480700
 for num_harmonics 0.00197100
 for in 0.03213600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00187800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00530600
 for num_harmonics 0.00046500
 for in 0.00788200
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.17221 s


width < len (6) in center_string(outstring, '873.15', width=5)

width < len (9) in center_string(outstring, '381299.00', width=6)

width < len (6) in center_string(outstring, '147.77', width=5)

width < len (8) in center_string(outstring, '10945.12', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9893(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9869(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.38', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7193(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM38.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM38.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM31.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM31.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00757900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066500
 amoeba2 0.03238300
 for num_harmonics 0.00328400
 for in 0.04416600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002300
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00089700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00540200
 for num_harmonics 0.00050800
 for in 0.00702300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00376100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02522300
 for num_harmonics 0.00188100
 for in 0.03169400
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00042300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00243000
 for num_harmonics 0.00023100
 for in 0.00322100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00473700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060400
 amoeba2 0.03209100
 for num_harmonics 0.00191100
 for in 0.03960900
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.12577 s


width < len (6) in center_string(outstring, '872.48', width=5)

width < len (9) in center_string(outstring, '380713.91', width=6)

width < len (6) in center_string(outstring, '151.27', width=5)

width < len (8) in center_string(outstring, '11468.81', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9880(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9903(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7223(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM31.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM31.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM29.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM29.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00708100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063000
 amoeba2 0.03027600
 for num_harmonics 0.00324500
 for in 0.04148800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00092500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015600
 amoeba2 0.00571300
 for num_harmonics 0.00048100
 for in 0.00735600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00371800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02002100
 for num_harmonics 0.00190000
 for in 0.02648300
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00094200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015400
 amoeba2 0.00510100
 for num_harmonics 0.00046800
 for in 0.00674500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00413600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03562200
 for num_harmonics 0.00320400
 for in 0.04380400
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00016300
 power_call_rz_harmonics 0.00021600
 amoeba1 0.00654500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00098300
 amoeba2 0.03921100
 for num_harmonics 0.00337200
 for in 0.05050500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00016100
 power_call_rz_harmonics 0.00022600
 amoeba1 0.00633100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00089100
 amoeba2 0.03773600
 for num_harmonics 0.00329700
 for in 0.04865600
 candidate_sigmaZ 0.00000400

Amount of optimization complete = 100%

for1 cost 0.22513 s


width < len (6) in center_string(outstring, '869.39', width=5)

width < len (9) in center_string(outstring, '378018.47', width=6)

width < len (6) in center_string(outstring, '150.47', width=5)

width < len (8) in center_string(outstring, '11348.19', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9880(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9895(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.3)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.1(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.29', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.7(1.0)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.9(1.8)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM29.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM29.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM35.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM35.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 22 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00793400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063200
 amoeba2 0.03026600
 for num_harmonics 0.00335200
 for in 0.04244000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00099700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015200
 amoeba2 0.00579800
 for num_harmonics 0.00047300
 for in 0.00750200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018200
 amoeba1 0.00592800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02471200
 for num_harmonics 0.00189300
 for in 0.03328400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00081200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00218700
 for num_harmonics 0.00023400
 for in 0.00337200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006700
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00192100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01131600
 for num_harmonics 0.00095400
 for in 0.01461400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00412800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02859100
 for num_harmonics 0.00200000
 for in 0.03553900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13681 s


width < len (6) in center_string(outstring, '872.39', width=5)

width < len (9) in center_string(outstring, '380629.75', width=6)

width < len (6) in center_string(outstring, '149.38', width=5)

width < len (8) in center_string(outstring, '11183.89', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9898(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9887(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7218(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM35.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM35.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM48.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM48.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 14 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00838900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062900
 amoeba2 0.03109100
 for num_harmonics 0.00328100
 for in 0.04364200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00103700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00529400
 for num_harmonics 0.00048300
 for in 0.00703600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006600
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00199900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027600
 amoeba2 0.01114600
 for num_harmonics 0.00093200
 for in 0.01449900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006500
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00204400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01048800
 for num_harmonics 0.00098800
 for in 0.01394500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00425300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057200
 amoeba2 0.02905400
 for num_harmonics 0.00198200
 for in 0.03612700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010700
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00404000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02576800
 for num_harmonics 0.00190700
 for in 0.03252400
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.14783 s


width < len (6) in center_string(outstring, '886.21', width=5)

width < len (9) in center_string(outstring, '392783.03', width=6)

width < len (6) in center_string(outstring, '142.51', width=5)

width < len (8) in center_string(outstring, '10180.95', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9879(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.45', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7214(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM48.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM48.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM80.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM80.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 9 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00660100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00065600
 amoeba2 0.02762400
 for num_harmonics 0.00326600
 for in 0.03839900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00041500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00286200
 for num_harmonics 0.00025500
 for in 0.00366900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012000
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00412800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00058800
 amoeba2 0.02481200
 for num_harmonics 0.00195900
 for in 0.03175500
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.07385 s


width < len (6) in center_string(outstring, '954.77', width=5)

width < len (9) in center_string(outstring, '455890.91', width=6)

width < len (6) in center_string(outstring, '102.60', width=5)

width < len (7) in center_string(outstring, '5281.57', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(50)', width=10)

width < len (11) in center_string(outstring, ' 0.9849(79)', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM80.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM80.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM15.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM15.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 22 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015100
 amoeba1 0.00574300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063300
 amoeba2 0.03287500
 for num_harmonics 0.00326000
 for in 0.04275800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00100600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00518300
 for num_harmonics 0.00047600
 for in 0.00687000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00307000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02123600
 for num_harmonics 0.00193600
 for in 0.02697500
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002300
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00102500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00549900
 for num_harmonics 0.00047800
 for in 0.00720800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00448200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02753200
 for num_harmonics 0.00200500
 for in 0.03482900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00425300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02202500
 for num_harmonics 0.00188400
 for in 0.02899300
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.14770 s


width < len (6) in center_string(outstring, '861.38', width=5)

width < len (9) in center_string(outstring, '371082.72', width=6)

width < len (6) in center_string(outstring, '150.48', width=5)

width < len (8) in center_string(outstring, '11348.64', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9901(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9866(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7202(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM15.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM15.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM62.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM62.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 43 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015300
 amoeba1 0.00823000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066700
 amoeba2 0.03042600
 for num_harmonics 0.00325100
 for in 0.04282200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  11% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002000
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00049600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00245300
 for num_harmonics 0.00023900
 for in 0.00330400
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  22% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00399600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02144500
 for num_harmonics 0.00197000
 for in 0.02824500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00772600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02284700
 for num_harmonics 0.00191100
 for in 0.03332000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  44% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00390200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02255300
 for num_harmonics 0.00206300
 for in 0.02935200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  55% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00366200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060700
 amoeba2 0.02551500
 for num_harmonics 0.00201300
 for in 0.03205000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011500
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00339900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057200
 amoeba2 0.02311800
 for num_harmonics 0.00209500
 for in 0.02943900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  77% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00418900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057400
 amoeba2 0.02240500
 for num_harmonics 0.00203000
 for in 0.02948100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  88% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00388200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057100
 amoeba2 0.03005100
 for num_harmonics 0.00192100
 for in 0.03666600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.26475 s


width < len (6) in center_string(outstring, '912.60', width=5)

width < len (9) in center_string(outstring, '416516.06', width=6)

width < len (6) in center_string(outstring, '130.07', width=5)

width < len (7) in center_string(outstring, '8476.95', width=6)

width < len (7) in center_string(outstring, '1400.49', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9861(73)', width=10)

width < len (11) in center_string(outstring, ' 0.4983(97)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(5.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.9(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7192(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM62.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM62.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM44.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM44.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 11 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00744000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062700
 amoeba2 0.02791100
 for num_harmonics 0.00333000
 for in 0.03956100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00087400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013800
 amoeba2 0.00466500
 for num_harmonics 0.00047200
 for in 0.00621200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00440500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03189300
 for num_harmonics 0.00192000
 for in 0.03905100
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.08486 s


width < len (6) in center_string(outstring, '884.34', width=5)

width < len (9) in center_string(outstring, '391123.94', width=6)

width < len (6) in center_string(outstring, '145.33', width=5)

width < len (8) in center_string(outstring, '10587.50', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9864(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.42', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7224(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM44.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM44.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM46.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM46.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 12 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00834300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00064800
 amoeba2 0.03401000
 for num_harmonics 0.00335800
 for in 0.04661300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00098100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00502900
 for num_harmonics 0.00047400
 for in 0.00670400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00426800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060100
 amoeba2 0.03270200
 for num_harmonics 0.00191500
 for in 0.03975400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002000
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00043600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007100
 amoeba2 0.00227700
 for num_harmonics 0.00025300
 for in 0.00308200
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.09619 s


width < len (6) in center_string(outstring, '882.75', width=5)

width < len (9) in center_string(outstring, '389725.47', width=6)

width < len (6) in center_string(outstring, '143.95', width=5)

width < len (8) in center_string(outstring, '10387.96', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9866(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.41', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7204(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM46.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM46.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM54.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM54.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00756600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066500
 amoeba2 0.03037900
 for num_harmonics 0.00333000
 for in 0.04219600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00104700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00456400
 for num_harmonics 0.00050000
 for in 0.00632500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002200
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00077100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00202100
 for num_harmonics 0.00025300
 for in 0.00316300
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010500
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00396400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02775500
 for num_harmonics 0.00191600
 for in 0.03444900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.08618 s


width < len (6) in center_string(outstring, '895.50', width=5)

width < len (9) in center_string(outstring, '401055.47', width=6)

width < len (6) in center_string(outstring, '139.20', width=5)

width < len (7) in center_string(outstring, '9715.25', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9859(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.49', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7207(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM54.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM54.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM64.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM64.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 31 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015700
 amoeba1 0.00703000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063500
 amoeba2 0.02900800
 for num_harmonics 0.00333400
 for in 0.04026100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00048600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00224600
 for num_harmonics 0.00023500
 for in 0.00310300
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00405700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057100
 amoeba2 0.02182200
 for num_harmonics 0.00189000
 for in 0.02860800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00378700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057200
 amoeba2 0.03177200
 for num_harmonics 0.00193300
 for in 0.03833300
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.11034 s


width < len (6) in center_string(outstring, '911.20', width=5)

width < len (9) in center_string(outstring, '415238.72', width=6)

width < len (6) in center_string(outstring, '127.69', width=5)

width < len (7) in center_string(outstring, '8171.23', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9852(74)', width=10)

width < len (13) in center_string(outstring, '0.0(1.4)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7218(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM64.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM64.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM15.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM15.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00701400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00067100
 amoeba2 0.02958800
 for num_harmonics 0.00411400
 for in 0.04164200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00004200
 power_call_rz_harmonics 0.00005000
 amoeba1 0.00165200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00018900
 amoeba2 0.00454900
 for num_harmonics 0.00047200
 for in 0.00696400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000300
 power_call_rz_harmonics 0.00018300
 amoeba1 0.00350300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02062000
 for num_harmonics 0.00187600
 for in 0.02675600
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00088800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015700
 amoeba2 0.00512900
 for num_harmonics 0.00050200
 for in 0.00675900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010900
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00409700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059400
 amoeba2 0.02766400
 for num_harmonics 0.00192300
 for in 0.03453400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00000300
 power_call_rz_harmonics 0.00008700
 amoeba1 0.00254700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027600
 amoeba2 0.01089500
 for num_harmonics 0.00097100
 for in 0.01478500
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13151 s


width < len (6) in center_string(outstring, '860.75', width=5)

width < len (9) in center_string(outstring, '370543.66', width=6)

width < len (6) in center_string(outstring, '150.92', width=5)

width < len (8) in center_string(outstring, '11415.69', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9875(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9908(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(7.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM15.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM15.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM73.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM73.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00727100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066700
 amoeba2 0.03149400
 for num_harmonics 0.00326300
 for in 0.04295100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00054400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00246300
 for num_harmonics 0.00023900
 for in 0.00338300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00159200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00476800
 for num_harmonics 0.00046500
 for in 0.00705300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00426900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056600
 amoeba2 0.03554500
 for num_harmonics 0.00193000
 for in 0.04258000
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.09601 s


width < len (6) in center_string(outstring, '939.75', width=5)

width < len (9) in center_string(outstring, '441662.22', width=6)

width < len (6) in center_string(outstring, '114.84', width=5)

width < len (7) in center_string(outstring, '6612.75', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(49)', width=10)

width < len (11) in center_string(outstring, ' 0.9843(76)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7208(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM73.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM73.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM24.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM24.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008500
 power_call_rz_harmonics 0.00015100
 amoeba1 0.00683700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00102000
 amoeba2 0.04656300
 for num_harmonics 0.00541700
 for in 0.06008800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002500
 power_call_rz_harmonics 0.00005000
 amoeba1 0.00229900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00020100
 amoeba2 0.00869100
 for num_harmonics 0.00084600
 for in 0.01212400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00019200
 power_call_rz_harmonics 0.00020000
 amoeba1 0.01114900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00093300
 amoeba2 0.03389200
 for num_harmonics 0.00331200
 for in 0.04969300
 candidate_sigmaZ 0.00000500

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003000
 power_call_rz_harmonics 0.00005700
 amoeba1 0.00273300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00021300
 amoeba2 0.00781600
 for num_harmonics 0.00081400
 for in 0.01167500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  66% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00014300
 power_call_rz_harmonics 0.00021500
 amoeba1 0.00932500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00082500
 amoeba2 0.04958000
 for num_harmonics 0.00317300
 for in 0.06327800
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008800
 power_call_rz_harmonics 0.00011100
 amoeba1 0.00328600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00042300
 amoeba2 0.01867600
 for num_harmonics 0.00162100
 for in 0.02421800
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.22118 s


width < len (6) in center_string(outstring, '867.30', width=5)

width < len (9) in center_string(outstring, '376207.06', width=6)

width < len (6) in center_string(outstring, '151.20', width=5)

width < len (8) in center_string(outstring, '11457.37', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9895(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9889(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7199(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM24.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM24.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM67.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM67.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 19 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00731300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063200
 amoeba2 0.02944600
 for num_harmonics 0.00324800
 for in 0.04089500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00058600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00267800
 for num_harmonics 0.00023800
 for in 0.00363900
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00175500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028300
 amoeba2 0.01043500
 for num_harmonics 0.00094600
 for in 0.01357700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012000
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00429400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02893000
 for num_harmonics 0.00198900
 for in 0.03604800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00434600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058500
 amoeba2 0.02372100
 for num_harmonics 0.00194500
 for in 0.03086800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12508 s


width < len (6) in center_string(outstring, '924.87', width=5)

width < len (9) in center_string(outstring, '427796.25', width=6)

width < len (6) in center_string(outstring, '123.63', width=5)

width < len (7) in center_string(outstring, '7660.37', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9884(74)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7202(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM67.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM67.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM51.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM51.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 19 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00635400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063100
 amoeba2 0.03112200
 for num_harmonics 0.00325000
 for in 0.04161000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00088300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015800
 amoeba2 0.00492400
 for num_harmonics 0.00047000
 for in 0.00651800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00300400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00029800
 amoeba2 0.01102200
 for num_harmonics 0.00094600
 for in 0.01542900
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00428500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03018600
 for num_harmonics 0.00191100
 for in 0.03721900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.10082 s


width < len (6) in center_string(outstring, '893.59', width=5)

width < len (9) in center_string(outstring, '399352.81', width=6)

width < len (6) in center_string(outstring, '141.24', width=5)

width < len (8) in center_string(outstring, '10001.30', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9880(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.49', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM51.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM51.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM69.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM69.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00727300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066600
 amoeba2 0.03187800
 for num_harmonics 0.00343700
 for in 0.04350800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002200
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00073800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00221700
 for num_harmonics 0.00023200
 for in 0.00331100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008100
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00242800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00029500
 amoeba2 0.01142600
 for num_harmonics 0.00093000
 for in 0.01523800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012300
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00408900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02795100
 for num_harmonics 0.00192600
 for in 0.03480200
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.09690 s


width < len (6) in center_string(outstring, '930.01', width=5)

width < len (9) in center_string(outstring, '432556.28', width=6)

width < len (6) in center_string(outstring, '122.87', width=5)

width < len (7) in center_string(outstring, '7567.00', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(48)', width=10)

width < len (11) in center_string(outstring, ' 0.9876(75)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7204(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM69.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM69.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM24.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM24.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015900
 amoeba1 0.00720100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00064100
 amoeba2 0.02906700
 for num_harmonics 0.00367800
 for in 0.04084500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00142200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014400
 amoeba2 0.00495300
 for num_harmonics 0.00047400
 for in 0.00707500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00014100
 amoeba1 0.00527900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057500
 amoeba2 0.02081500
 for num_harmonics 0.00190100
 for in 0.02885500
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00095100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015300
 amoeba2 0.00569700
 for num_harmonics 0.00047300
 for in 0.00735600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013400
 amoeba1 0.00368700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00060700
 amoeba2 0.02874300
 for num_harmonics 0.00192100
 for in 0.03520300
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.11939 s


width < len (6) in center_string(outstring, '868.22', width=5)

width < len (9) in center_string(outstring, '376999.31', width=6)

width < len (6) in center_string(outstring, '150.98', width=5)

width < len (8) in center_string(outstring, '11424.25', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9870(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9899(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7215(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM24.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM24.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM11.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM11.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 27 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00672100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066200
 amoeba2 0.02977300
 for num_harmonics 0.00323700
 for in 0.04064600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00087200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015900
 amoeba2 0.00496000
 for num_harmonics 0.00049800
 for in 0.00657200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00016600
 amoeba1 0.00535100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02543400
 for num_harmonics 0.00188000
 for in 0.03340300
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00105600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00485600
 for num_harmonics 0.00050300
 for in 0.00663700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00754900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02252700
 for num_harmonics 0.00192400
 for in 0.03283000
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00577300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057900
 amoeba2 0.02382900
 for num_harmonics 0.00204300
 for in 0.03250900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00038400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00260600
 for num_harmonics 0.00023200
 for in 0.00334000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00355400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062400
 amoeba2 0.02745400
 for num_harmonics 0.00192000
 for in 0.03382000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.18984 s


width < len (6) in center_string(outstring, '861.17', width=5)

width < len (9) in center_string(outstring, '370907.28', width=6)

width < len (6) in center_string(outstring, '150.71', width=5)

width < len (8) in center_string(outstring, '11383.32', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9887(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9905(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(1.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(2.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(3.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(5.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7221(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(5.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM11.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM11.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM26.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM26.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00947500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066100
 amoeba2 0.02948700
 for num_harmonics 0.00325100
 for in 0.04312900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00097400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015300
 amoeba2 0.00482100
 for num_harmonics 0.00051400
 for in 0.00652400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00564000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.01992800
 for num_harmonics 0.00191200
 for in 0.02830800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002000
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00091600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013800
 amoeba2 0.00471800
 for num_harmonics 0.00047000
 for in 0.00630600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003400
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00171100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00596800
 for num_harmonics 0.00047200
 for in 0.00836500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013300
 amoeba1 0.00441300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057000
 amoeba2 0.03314200
 for num_harmonics 0.00191400
 for in 0.04028000
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.13297 s


width < len (6) in center_string(outstring, '866.02', width=5)

width < len (9) in center_string(outstring, '375091.72', width=6)

width < len (6) in center_string(outstring, '150.60', width=5)

width < len (8) in center_string(outstring, '11366.71', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9874(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9870(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.33', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7213(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM26.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM26.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM33.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM33.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00793600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062900
 amoeba2 0.02743600
 for num_harmonics 0.00337600
 for in 0.03962800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00138300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00526000
 for num_harmonics 0.00047400
 for in 0.00732100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002000
 power_call_rz_harmonics 0.00001700
 amoeba1 0.00077200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00006900
 amoeba2 0.00238200
 for num_harmonics 0.00023100
 for in 0.00349900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013300
 amoeba1 0.00403900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03226700
 for num_harmonics 0.00193700
 for in 0.03905500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00013000
 amoeba1 0.00444200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057100
 amoeba2 0.02190200
 for num_harmonics 0.00230900
 for in 0.02947800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.11903 s


width < len (6) in center_string(outstring, '874.78', width=5)

width < len (9) in center_string(outstring, '382723.22', width=6)

width < len (6) in center_string(outstring, '152.15', width=5)

width < len (8) in center_string(outstring, '11601.58', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9880(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.38', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7221(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM33.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM33.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM3.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM3.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 34 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00713300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066900
 amoeba2 0.03379300
 for num_harmonics 0.00327900
 for in 0.04512900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00013100
 amoeba1 0.00319600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02433400
 for num_harmonics 0.00189900
 for in 0.03024200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008000
 power_call_rz_harmonics 0.00013000
 amoeba1 0.00437800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02351900
 for num_harmonics 0.00188400
 for in 0.03055900
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00013100
 amoeba1 0.00442800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02162100
 for num_harmonics 0.00193600
 for in 0.02880600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011700
 power_call_rz_harmonics 0.00013100
 amoeba1 0.00444400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02414400
 for num_harmonics 0.00212500
 for in 0.03153600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00165400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01090800
 for num_harmonics 0.00093700
 for in 0.01391600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006900
 amoeba1 0.00219800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028200
 amoeba2 0.01287400
 for num_harmonics 0.00094300
 for in 0.01643700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00366100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03285800
 for num_harmonics 0.00191600
 for in 0.03924400
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.23595 s


width < len (6) in center_string(outstring, '858.46', width=5)

width < len (9) in center_string(outstring, '368576.19', width=6)

width < len (6) in center_string(outstring, '148.12', width=5)

width < len (8) in center_string(outstring, '11042.14', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4980(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9867(69)', width=10)

width < len (14) in center_string(outstring, ' 0.2(4.7)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(2.3)x10^2', width=12)

width < len (14) in center_string(outstring, ' 0.0(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7232(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.7)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.1)x10^4', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.9)x10^1', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM3.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM3.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM55.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM55.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00016400
 amoeba1 0.00660100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063100
 amoeba2 0.03185800
 for num_harmonics 0.00324300
 for in 0.04259400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00090200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00474800
 for num_harmonics 0.00047500
 for in 0.00632700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00178500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01017100
 for num_harmonics 0.00094700
 for in 0.01331900
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00415400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02739900
 for num_harmonics 0.00199900
 for in 0.03435900
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.09664 s


width < len (6) in center_string(outstring, '897.80', width=5)

width < len (9) in center_string(outstring, '403122.06', width=6)

width < len (6) in center_string(outstring, '138.40', width=5)

width < len (7) in center_string(outstring, '9603.95', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9877(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7205(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM55.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM55.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM53.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM53.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008400
 power_call_rz_harmonics 0.00015400
 amoeba1 0.00578100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063600
 amoeba2 0.03360800
 for num_harmonics 0.00339400
 for in 0.04366700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00099900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014300
 amoeba2 0.00482100
 for num_harmonics 0.00047100
 for in 0.00651600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006900
 amoeba1 0.00163900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028300
 amoeba2 0.00983800
 for num_harmonics 0.00097800
 for in 0.01287500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00451800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057200
 amoeba2 0.02673700
 for num_harmonics 0.00191200
 for in 0.03400700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00408900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02356800
 for num_harmonics 0.00192400
 for in 0.03043000
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.12754 s


width < len (6) in center_string(outstring, '892.28', width=5)

width < len (9) in center_string(outstring, '398183.41', width=6)

width < len (6) in center_string(outstring, '138.91', width=5)

width < len (7) in center_string(outstring, '9674.87', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9858(72)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.51', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7199(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.4(2.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM53.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM53.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM65.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM65.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 25 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015200
 amoeba1 0.00807200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066800
 amoeba2 0.02938000
 for num_harmonics 0.00325200
 for in 0.04162100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002000
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00053800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007100
 amoeba2 0.00228200
 for num_harmonics 0.00023500
 for in 0.00317300
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00200200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028200
 amoeba2 0.01050800
 for num_harmonics 0.00096600
 for in 0.01391700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010000
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00378500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02848900
 for num_harmonics 0.00200500
 for in 0.03511100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00004300
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00190000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00029600
 amoeba2 0.01056800
 for num_harmonics 0.00096200
 for in 0.01385000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.10772 s


width < len (6) in center_string(outstring, '916.31', width=5)

width < len (9) in center_string(outstring, '419908.31', width=6)

width < len (6) in center_string(outstring, '127.54', width=5)

width < len (7) in center_string(outstring, '8150.97', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9860(74)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7193(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM65.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM65.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM53.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM53.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 19 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008600
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00930100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062600
 amoeba2 0.02974500
 for num_harmonics 0.00323600
 for in 0.04315900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00095500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015400
 amoeba2 0.00456900
 for num_harmonics 0.00047100
 for in 0.00623100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00184500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028000
 amoeba2 0.00995000
 for num_harmonics 0.00096900
 for in 0.01318000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00370500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057000
 amoeba2 0.02966800
 for num_harmonics 0.00193400
 for in 0.03614600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003400
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00090800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00530000
 for num_harmonics 0.00047500
 for in 0.00690100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  83% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00496000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02369800
 for num_harmonics 0.00194600
 for in 0.03140600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13708 s


width < len (6) in center_string(outstring, '893.09', width=5)

width < len (9) in center_string(outstring, '398908.38', width=6)

width < len (6) in center_string(outstring, '138.72', width=5)

width < len (7) in center_string(outstring, '9647.95', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4973(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9847(72)', width=10)

width < len (14) in center_string(outstring, ' 0.0(1.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.51', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7201(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM53.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM53.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM21.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM21.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008500
 power_call_rz_harmonics 0.00015300
 amoeba1 0.00774200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063200
 amoeba2 0.02773900
 for num_harmonics 0.00327300
 for in 0.03963200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00124100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00537700
 for num_harmonics 0.00047800
 for in 0.00730100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011500
 power_call_rz_harmonics 0.00013100
 amoeba1 0.00334100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02090800
 for num_harmonics 0.00188700
 for in 0.02695400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00085900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00490000
 for num_harmonics 0.00047300
 for in 0.00643400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013300
 amoeba1 0.00393100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057300
 amoeba2 0.03412800
 for num_harmonics 0.00191200
 for in 0.04078500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00191000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01147400
 for num_harmonics 0.00092900
 for in 0.01473100
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13589 s


width < len (6) in center_string(outstring, '869.68', width=5)

width < len (9) in center_string(outstring, '378274.28', width=6)

width < len (6) in center_string(outstring, '151.66', width=5)

width < len (8) in center_string(outstring, '11528.27', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9884(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9896(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.32', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7186(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.8)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM21.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM21.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM47.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM47.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 11 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015100
 amoeba1 0.00696600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00071100
 amoeba2 0.02926000
 for num_harmonics 0.00331900
 for in 0.04050400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00093000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014300
 amoeba2 0.00481900
 for num_harmonics 0.00047600
 for in 0.00642900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00419700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02764200
 for num_harmonics 0.00198500
 for in 0.03463300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009500
 power_call_rz_harmonics 0.00013100
 amoeba1 0.00499300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02277100
 for num_harmonics 0.00188300
 for in 0.03044000
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.11205 s


width < len (6) in center_string(outstring, '884.89', width=5)

width < len (9) in center_string(outstring, '391614.94', width=6)

width < len (6) in center_string(outstring, '142.53', width=5)

width < len (8) in center_string(outstring, '10184.75', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9873(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.41', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7201(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.3(1.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM47.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM47.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM36.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM36.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 23 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008500
 power_call_rz_harmonics 0.00015100
 amoeba1 0.00676300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062500
 amoeba2 0.03033700
 for num_harmonics 0.00323900
 for in 0.04121100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002100
 power_call_rz_harmonics 0.00003500
 amoeba1 0.00098200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00673500
 for num_harmonics 0.00048100
 for in 0.00840200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000500
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00562500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02383400
 for num_harmonics 0.00189100
 for in 0.03208100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006100
 power_call_rz_harmonics 0.00006700
 amoeba1 0.00257100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028200
 amoeba2 0.01083900
 for num_harmonics 0.00099100
 for in 0.01482000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002000
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00046700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00006800
 amoeba2 0.00226200
 for num_harmonics 0.00023700
 for in 0.00307900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013300
 amoeba1 0.00619400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.03330700
 for num_harmonics 0.00192800
 for in 0.04223600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.14189 s


width < len (6) in center_string(outstring, '874.66', width=5)

width < len (9) in center_string(outstring, '382617.38', width=6)

width < len (6) in center_string(outstring, '148.69', width=5)

width < len (8) in center_string(outstring, '11081.59', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9909(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9866(70)', width=10)

width < len (14) in center_string(outstring, '0.0(2.0)x10^-1', width=10)

width < len (14) in center_string(outstring, ' 0.0(5.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.40', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.1)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM36.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM36.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM79.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM79.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 9 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008500
 power_call_rz_harmonics 0.00015100
 amoeba1 0.00855400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063400
 amoeba2 0.02922200
 for num_harmonics 0.00322200
 for in 0.04187800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002200
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00048900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007000
 amoeba2 0.00241100
 for num_harmonics 0.00023800
 for in 0.00325300
 candidate_sigmaZ 0.00000000

Amount of optimization complete = 100%

for1 cost 0.04516 s


width < len (6) in center_string(outstring, '952.10', width=5)

width < len (9) in center_string(outstring, '453350.88', width=6)

width < len (6) in center_string(outstring, '104.67', width=5)

width < len (7) in center_string(outstring, '5496.10', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(50)', width=10)

width < len (11) in center_string(outstring, ' 0.9876(79)', width=10)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM79.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM79.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM51.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM51.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008500
 power_call_rz_harmonics 0.00015100
 amoeba1 0.00770000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063300
 amoeba2 0.02868400
 for num_harmonics 0.00325600
 for in 0.04051800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00094300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00456800
 for num_harmonics 0.00047900
 for in 0.00619300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006700
 amoeba1 0.00185200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028100
 amoeba2 0.01223200
 for num_harmonics 0.00095000
 for in 0.01545200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00387000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02725500
 for num_harmonics 0.00194300
 for in 0.03387700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00013000
 amoeba1 0.00355000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057700
 amoeba2 0.02443400
 for num_harmonics 0.00229200
 for in 0.03110700
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12720 s


width < len (6) in center_string(outstring, '891.49', width=5)

width < len (9) in center_string(outstring, '397478.69', width=6)

width < len (6) in center_string(outstring, '141.59', width=5)

width < len (8) in center_string(outstring, '10050.18', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9855(71)', width=10)

width < len (14) in center_string(outstring, '0.0(5.0)x10^-1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.49', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7204(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.7)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM51.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM51.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM59.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM59.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 26 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008500
 power_call_rz_harmonics 0.00015200
 amoeba1 0.00640000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066200
 amoeba2 0.03053100
 for num_harmonics 0.00323600
 for in 0.04107700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00137600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00517500
 for num_harmonics 0.00047400
 for in 0.00722900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006800
 amoeba1 0.00166700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027900
 amoeba2 0.01039300
 for num_harmonics 0.00093700
 for in 0.01341300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010200
 power_call_rz_harmonics 0.00013100
 amoeba1 0.00412100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.03488300
 for num_harmonics 0.00197000
 for in 0.04178100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00394700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02374300
 for num_harmonics 0.00203100
 for in 0.03054800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13410 s


width < len (6) in center_string(outstring, '904.00', width=5)

width < len (9) in center_string(outstring, '408703.38', width=6)

width < len (6) in center_string(outstring, '134.35', width=5)

width < len (7) in center_string(outstring, '9051.78', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4972(46)', width=10)

width < len (11) in center_string(outstring, ' 0.9839(73)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.44', width=5)

width < len (11) in center_string(outstring, ' 0.5134(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7208(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.7(6.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM59.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM59.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM73.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM73.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00735900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062900
 amoeba2 0.02805500
 for num_harmonics 0.00325300
 for in 0.03954900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002100
 power_call_rz_harmonics 0.00001700
 amoeba1 0.00061700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00228400
 for num_harmonics 0.00024000
 for in 0.00326100
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00136700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00597300
 for num_harmonics 0.00046800
 for in 0.00803100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014100
 amoeba1 0.00379800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057100
 amoeba2 0.03151700
 for num_harmonics 0.00198200
 for in 0.03813900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00367100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02186200
 for num_harmonics 0.00215200
 for in 0.02853000
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.11756 s


width < len (6) in center_string(outstring, '937.97', width=5)

width < len (9) in center_string(outstring, '439996.47', width=6)

width < len (6) in center_string(outstring, '117.00', width=5)

width < len (7) in center_string(outstring, '6862.27', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(48)', width=10)

width < len (11) in center_string(outstring, ' 0.9834(76)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5136(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7219(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.4)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM73.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM73.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM71.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM71.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 14 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00009000
 power_call_rz_harmonics 0.00015800
 amoeba1 0.00719700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00065200
 amoeba2 0.03572700
 for num_harmonics 0.00325600
 for in 0.04708900
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002200
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00052000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00232400
 for num_harmonics 0.00023700
 for in 0.00319800
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006200
 power_call_rz_harmonics 0.00006700
 amoeba1 0.00179000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01057600
 for num_harmonics 0.00092800
 for in 0.01371100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010100
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00369200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.04164700
 for num_harmonics 0.00199700
 for in 0.04814400
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.11219 s


width < len (6) in center_string(outstring, '937.57', width=5)

width < len (9) in center_string(outstring, '439621.09', width=6)

width < len (6) in center_string(outstring, '118.79', width=5)

width < len (7) in center_string(outstring, '7074.25', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(48)', width=10)

width < len (11) in center_string(outstring, ' 0.9859(76)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.47', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7222(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM71.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM71.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM66.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM66.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00705000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062600
 amoeba2 0.02990100
 for num_harmonics 0.00369600
 for in 0.04152800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00058500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00226700
 for num_harmonics 0.00024000
 for in 0.00322900
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00201500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01152200
 for num_harmonics 0.00105900
 for in 0.01503400
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013000
 power_call_rz_harmonics 0.00019300
 amoeba1 0.00447800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02918300
 for num_harmonics 0.00191600
 for in 0.03647400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00479800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02410000
 for num_harmonics 0.00187500
 for in 0.03159800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00413700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02761300
 for num_harmonics 0.00186900
 for in 0.03446000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.16238 s


width < len (6) in center_string(outstring, '920.43', width=5)

width < len (9) in center_string(outstring, '423695.50', width=6)

width < len (6) in center_string(outstring, '124.55', width=5)

width < len (7) in center_string(outstring, '7774.75', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4971(47)', width=10)

width < len (11) in center_string(outstring, ' 0.9849(74)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.46', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7205(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(1.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM66.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM66.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM13.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM13.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00818100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00066400
 amoeba2 0.02868800
 for num_harmonics 0.00328300
 for in 0.04106800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  14% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00095000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015100
 amoeba2 0.00468400
 for num_harmonics 0.00047500
 for in 0.00634300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  28% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018300
 amoeba1 0.00362300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02054800
 for num_harmonics 0.00192100
 for in 0.02685200
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  42% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00104000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00579300
 for num_harmonics 0.00047200
 for in 0.00752700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  57% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00469100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02974000
 for num_harmonics 0.00230800
 for in 0.03757700
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  71% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013300
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00425600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02270500
 for num_harmonics 0.00200800
 for in 0.02980700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  85% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00206400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00028300
 amoeba2 0.01159400
 for num_harmonics 0.00096100
 for in 0.01505900
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.16431 s


width < len (6) in center_string(outstring, '862.10', width=5)

width < len (9) in center_string(outstring, '371710.94', width=6)

width < len (6) in center_string(outstring, '151.15', width=5)

width < len (8) in center_string(outstring, '11449.57', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9890(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9919(69)', width=10)

width < len (13) in center_string(outstring, '0.0(6.2)x10^2', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7212(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(3.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM13.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM13.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM32.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM32.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015400
 amoeba1 0.00677200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062900
 amoeba2 0.03066700
 for num_harmonics 0.00325100
 for in 0.04157100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00088300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015800
 amoeba2 0.00454400
 for num_harmonics 0.00048200
 for in 0.00614800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013900
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00433200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02286500
 for num_harmonics 0.00189700
 for in 0.02994000
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001800
 amoeba1 0.00040600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007300
 amoeba2 0.00258100
 for num_harmonics 0.00024500
 for in 0.00336600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00422000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02956800
 for num_harmonics 0.00193000
 for in 0.03653800
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.11761 s


width < len (6) in center_string(outstring, '873.17', width=5)

width < len (9) in center_string(outstring, '381309.88', width=6)

width < len (6) in center_string(outstring, '151.43', width=5)

width < len (8) in center_string(outstring, '11493.28', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9892(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9946(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(2.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7182(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM32.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM32.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM30.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM30.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 17 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00829400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00063600
 amoeba2 0.03266300
 for num_harmonics 0.00331800
 for in 0.04516500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00088600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00469100
 for num_harmonics 0.00047200
 for in 0.00626400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00606400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02352100
 for num_harmonics 0.00188000
 for in 0.03230800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003600
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00056500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00244300
 for num_harmonics 0.00023300
 for in 0.00337600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00437700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03051400
 for num_harmonics 0.00195300
 for in 0.03768100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00002100
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00084600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00270600
 for num_harmonics 0.00022800
 for in 0.00390000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.12875 s


width < len (6) in center_string(outstring, '870.77', width=5)

width < len (9) in center_string(outstring, '379221.19', width=6)

width < len (6) in center_string(outstring, '150.58', width=5)

width < len (8) in center_string(outstring, '11364.12', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9918(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9849(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(1.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.31', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7229(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.9)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM30.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM30.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM6.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM6.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 33 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008900
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00694000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066600
 amoeba2 0.03017600
 for num_harmonics 0.00333100
 for in 0.04136800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00391300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057800
 amoeba2 0.01970300
 for num_harmonics 0.00198600
 for in 0.02644600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00087000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014600
 amoeba2 0.00455400
 for num_harmonics 0.00050300
 for in 0.00613900
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00499300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02401600
 for num_harmonics 0.00210900
 for in 0.03195100
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00464700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058700
 amoeba2 0.02397000
 for num_harmonics 0.00205700
 for in 0.03154400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00193100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01272000
 for num_harmonics 0.00099800
 for in 0.01608800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006400
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00278700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00029200
 amoeba2 0.01217800
 for num_harmonics 0.00092600
 for in 0.01632700
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00368100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057000
 amoeba2 0.02967300
 for num_harmonics 0.00190200
 for in 0.03609300
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.20604 s


width < len (6) in center_string(outstring, '858.30', width=5)

width < len (9) in center_string(outstring, '368441.19', width=6)

width < len (6) in center_string(outstring, '147.79', width=5)

width < len (8) in center_string(outstring, '10994.65', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4979(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9892(69)', width=10)

width < len (14) in center_string(outstring, '-0.7(1.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(3.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7205(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.4)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.2)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM6.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM6.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM32.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM32.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00886100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066700
 amoeba2 0.03031400
 for num_harmonics 0.00323600
 for in 0.04333200
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00091900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015600
 amoeba2 0.00477300
 for num_harmonics 0.00050000
 for in 0.00643000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013500
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00507000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02056900
 for num_harmonics 0.00196200
 for in 0.02843900
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00058700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00007400
 amoeba2 0.00265800
 for num_harmonics 0.00025500
 for in 0.00363700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00427400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02640800
 for num_harmonics 0.00189700
 for in 0.03341300
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.11530 s


width < len (6) in center_string(outstring, '874.11', width=5)

width < len (9) in center_string(outstring, '382135.44', width=6)

width < len (6) in center_string(outstring, '150.91', width=5)

width < len (8) in center_string(outstring, '11414.33', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9920(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9905(70)', width=10)

width < len (14) in center_string(outstring, ' 0.0(8.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(1.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7194(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM32.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM32.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM39.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM39.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 20 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015400
 amoeba1 0.00797700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062900
 amoeba2 0.02860200
 for num_harmonics 0.00322200
 for in 0.04068100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00140000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00466900
 for num_harmonics 0.00047900
 for in 0.00677000
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00347400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.01942400
 for num_harmonics 0.00189600
 for in 0.02563600
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006600
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00321300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00029800
 amoeba2 0.01130600
 for num_harmonics 0.00095300
 for in 0.01591400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005100
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00111900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014000
 amoeba2 0.00544700
 for num_harmonics 0.00049600
 for in 0.00729700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00441400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.02900000
 for num_harmonics 0.00197100
 for in 0.03620600
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13256 s


width < len (6) in center_string(outstring, '873.89', width=5)

width < len (9) in center_string(outstring, '381942.94', width=6)

width < len (6) in center_string(outstring, '148.11', width=5)

width < len (8) in center_string(outstring, '10995.68', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9883(70)', width=10)

width < len (11) in center_string(outstring, ' 0.4975(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9892(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.41', width=5)

width < len (11) in center_string(outstring, ' 0.5132(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7221(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM39.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM39.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM42.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM42.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00703700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063100
 amoeba2 0.03143900
 for num_harmonics 0.00324000
 for in 0.04260000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00103300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00579800
 for num_harmonics 0.00047800
 for in 0.00752700
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00084000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014700
 amoeba2 0.00469500
 for num_harmonics 0.00046700
 for in 0.00623000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00410800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056600
 amoeba2 0.02747600
 for num_harmonics 0.00191800
 for in 0.03433600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00162900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00521000
 for num_harmonics 0.00049800
 for in 0.00755900
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.09830 s


width < len (6) in center_string(outstring, '882.70', width=5)

width < len (9) in center_string(outstring, '389676.94', width=6)

width < len (6) in center_string(outstring, '146.42', width=5)

width < len (8) in center_string(outstring, '10746.11', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9860(70)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.43', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7223(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.7)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM42.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM42.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM48.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM48.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 12 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00749400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00062900
 amoeba2 0.02790600
 for num_harmonics 0.00338800
 for in 0.03966900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00087200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015000
 amoeba2 0.00415800
 for num_harmonics 0.00047500
 for in 0.00571900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00004900
 power_call_rz_harmonics 0.00006700
 amoeba1 0.00213400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00027700
 amoeba2 0.01059300
 for num_harmonics 0.00098100
 for in 0.01410900
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00384300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02935100
 for num_harmonics 0.00198900
 for in 0.03600400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010900
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00728000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00055400
 amoeba2 0.02489500
 for num_harmonics 0.00189800
 for in 0.03488000
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.13044 s


width < len (6) in center_string(outstring, '885.95', width=5)

width < len (9) in center_string(outstring, '392553.94', width=6)

width < len (6) in center_string(outstring, '142.46', width=5)

width < len (8) in center_string(outstring, '10174.27', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9870(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.44', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7219(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.5)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM48.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM48.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM74.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM74.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 18 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010800
 power_call_rz_harmonics 0.00021600
 amoeba1 0.00811700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00062500
 amoeba2 0.02863900
 for num_harmonics 0.00357800
 for in 0.04129400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  25% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00003700
 power_call_rz_harmonics 0.00001900
 amoeba1 0.00090000
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007500
 amoeba2 0.00225600
 for num_harmonics 0.00025800
 for in 0.00355100
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00157900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00534600
 for num_harmonics 0.00047300
 for in 0.00760600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014100
 amoeba1 0.00427200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056800
 amoeba2 0.03264500
 for num_harmonics 0.00192400
 for in 0.03968000
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.09218 s


width < len (6) in center_string(outstring, '942.02', width=5)

width < len (9) in center_string(outstring, '443797.72', width=6)

width < len (6) in center_string(outstring, '114.32', width=5)

width < len (7) in center_string(outstring, '6552.75', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4970(49)', width=10)

width < len (11) in center_string(outstring, ' 0.9873(76)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.6)x10^1', width=12)

width < len (6) in center_string(outstring, '117.48', width=5)

width < len (11) in center_string(outstring, ' 0.5135(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7208(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM74.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM74.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM2.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM2.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 38 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00016000
 amoeba1 0.00634500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063300
 amoeba2 0.02986200
 for num_harmonics 0.00343300
 for in 0.04052900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =   9% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013800
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00336700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02225700
 for num_harmonics 0.00189600
 for in 0.02836300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  18% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010000
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00300200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056500
 amoeba2 0.02058500
 for num_harmonics 0.00192000
 for in 0.02631800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  27% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00480600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056300
 amoeba2 0.02463900
 for num_harmonics 0.00189900
 for in 0.03217200
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  36% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00011500
 power_call_rz_harmonics 0.00013200
 amoeba1 0.00455100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00057100
 amoeba2 0.02358500
 for num_harmonics 0.00218400
 for in 0.03114400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  45% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007300
 amoeba1 0.00234200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00029600
 amoeba2 0.01112200
 for num_harmonics 0.00093500
 for in 0.01485600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  54% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00222200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00029900
 amoeba2 0.00986700
 for num_harmonics 0.00094700
 for in 0.01349500
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  63% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003800
 amoeba1 0.00087200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015600
 amoeba2 0.00531400
 for num_harmonics 0.00046800
 for in 0.00689200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  72% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010000
 power_call_rz_harmonics 0.00013300
 amoeba1 0.00395400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00057200
 amoeba2 0.02805400
 for num_harmonics 0.00194000
 for in 0.03476100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  81% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00006500
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00196400
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028400
 amoeba2 0.01063500
 for num_harmonics 0.00092300
 for in 0.01394900
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  90% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013500
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00367200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02703500
 for num_harmonics 0.00193700
 for in 0.03348700
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.27607 s


width < len (6) in center_string(outstring, '860.73', width=5)

width < len (9) in center_string(outstring, '370529.75', width=6)

width < len (6) in center_string(outstring, '148.42', width=5)

width < len (8) in center_string(outstring, '11087.88', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4981(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9875(69)', width=10)

width < len (14) in center_string(outstring, ' 0.2(1.4)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(3.3)x10^2', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(2.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7231(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.6)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(4.5)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM2.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM2.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM6.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM6.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 34 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008700
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00966900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00067000
 amoeba2 0.03363000
 for num_harmonics 0.00327600
 for in 0.04749800
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013600
 amoeba1 0.00311400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055600
 amoeba2 0.02224200
 for num_harmonics 0.00190100
 for in 0.02809300
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00090700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00015400
 amoeba2 0.00470500
 for num_harmonics 0.00048000
 for in 0.00632900
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  37% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00345700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02512000
 for num_harmonics 0.00214300
 for in 0.03156900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00633000
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02525500
 for num_harmonics 0.00215600
 for in 0.03458200
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00005200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00145400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00013800
 amoeba2 0.00545000
 for num_harmonics 0.00047600
 for in 0.00761300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00000200
 power_call_rz_harmonics 0.00005300
 amoeba1 0.00144600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00420700
 for num_harmonics 0.00046600
 for in 0.00631900
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00408300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00059900
 amoeba2 0.03494700
 for num_harmonics 0.00191200
 for in 0.04181100
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.20389 s


width < len (6) in center_string(outstring, '859.75', width=5)

width < len (9) in center_string(outstring, '369687.31', width=6)

width < len (6) in center_string(outstring, '147.90', width=5)

width < len (8) in center_string(outstring, '11009.95', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4979(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9860(69)', width=10)

width < len (14) in center_string(outstring, '-0.2(4.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(2.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.37', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7199(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.9)x10^2', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM6.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM6.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM44.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM44.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 11 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000200
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00570600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066400
 amoeba2 0.02813300
 for num_harmonics 0.00346500
 for in 0.03822400
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00002200
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00161500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014200
 amoeba2 0.00474400
 for num_harmonics 0.00047900
 for in 0.00704600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00402500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056900
 amoeba2 0.03293000
 for num_harmonics 0.00192700
 for in 0.03971800
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.08502 s


width < len (6) in center_string(outstring, '883.43', width=5)

width < len (9) in center_string(outstring, '390320.75', width=6)

width < len (6) in center_string(outstring, '144.24', width=5)

width < len (8) in center_string(outstring, '10430.14', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4974(45)', width=10)

width < len (11) in center_string(outstring, ' 0.9857(71)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.42', width=5)

width < len (11) in center_string(outstring, ' 0.5133(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7208(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(2.6)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM44.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM44.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM9.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM9.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 31 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00713900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066000
 amoeba2 0.02973800
 for num_harmonics 0.00323200
 for in 0.04102400
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  10% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00134900
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00471500
 for num_harmonics 0.00047500
 for in 0.00676000
 candidate_sigmaZ 0.00000000

Amount of optimization complete =  20% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000300
 power_call_rz_harmonics 0.00018200
 amoeba1 0.00618900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056000
 amoeba2 0.02161100
 for num_harmonics 0.00187700
 for in 0.03043000
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  30% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00113200
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00497700
 for num_harmonics 0.00048100
 for in 0.00681100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00384800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056400
 amoeba2 0.02307500
 for num_harmonics 0.00213500
 for in 0.02990500
 candidate_sigmaZ 0.00000300

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00422300
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055800
 amoeba2 0.02399900
 for num_harmonics 0.00203300
 for in 0.03109500
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007000
 amoeba1 0.00240200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00029500
 amoeba2 0.01181700
 for num_harmonics 0.00094600
 for in 0.01561800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  69% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00007900
 power_call_rz_harmonics 0.00007200
 amoeba1 0.00196700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00027700
 amoeba2 0.01269300
 for num_harmonics 0.00092500
 for in 0.01602200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00390600
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00060100
 amoeba2 0.03012100
 for num_harmonics 0.00191700
 for in 0.03681300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  89% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 1
 for0 0.00000100
 power_call_rz_harmonics 0.00003400
 amoeba1 0.00041100
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00007200
 amoeba2 0.00240100
 for num_harmonics 0.00022400
 for in 0.00315000
 candidate_sigmaZ 0.00000100

Amount of optimization complete = 100%

for1 cost 0.21772 s


width < len (6) in center_string(outstring, '860.22', width=5)

width < len (9) in center_string(outstring, '370087.31', width=6)

width < len (6) in center_string(outstring, '149.56', width=5)

width < len (8) in center_string(outstring, '11211.43', width=6)

width < len (11) in center_string(outstring, ' 0.9008(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9878(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9896(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(1.7)x10^1', width=12)

width < len (11) in center_string(outstring, ' 333.0(1.4)', width=10)

width < len (14) in center_string(outstring, '-0.7(1.8)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(4.2)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(3.2)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(6.5)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.1(9.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.33', width=5)

width < len (11) in center_string(outstring, ' 0.5129(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7192(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.3)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(5.2)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM9.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM9.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM17.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM17.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 21 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00008800
 power_call_rz_harmonics 0.00015600
 amoeba1 0.00722300
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063000
 amoeba2 0.03004300
 for num_harmonics 0.00326100
 for in 0.04141100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  20% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00132500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015000
 amoeba2 0.00548800
 for num_harmonics 0.00047300
 for in 0.00751800
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  40% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000400
 power_call_rz_harmonics 0.00018300
 amoeba1 0.00472700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02066700
 for num_harmonics 0.00189800
 for in 0.02804800
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  60% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00102500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00014100
 amoeba2 0.00526500
 for num_harmonics 0.00049800
 for in 0.00701000
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  80% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00013800
 amoeba1 0.00375800
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056500
 amoeba2 0.03153500
 for num_harmonics 0.00203900
 for in 0.03815100
 candidate_sigmaZ 0.00000300

Amount of optimization complete = 100%

for1 cost 0.12219 s


width < len (6) in center_string(outstring, '862.47', width=5)

width < len (9) in center_string(outstring, '372027.41', width=6)

width < len (6) in center_string(outstring, '151.36', width=5)

width < len (8) in center_string(outstring, '11481.68', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9909(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4977(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9892(69)', width=10)

width < len (14) in center_string(outstring, ' 0.0(4.1)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, ' 0.0(1.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.35', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7210(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(2.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM17.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM17.00_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM10.50.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM10.50_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 25 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010500
 power_call_rz_harmonics 0.00015500
 amoeba1 0.00964800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00063000
 amoeba2 0.02886200
 for num_harmonics 0.00325600
 for in 0.04266600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  12% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00140500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014900
 amoeba2 0.00489900
 for num_harmonics 0.00047100
 for in 0.00700600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  25% gen_dvect 0.00000000
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00000300
 power_call_rz_harmonics 0.00018200
 amoeba1 0.00369400
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055700
 amoeba2 0.02238300
 for num_harmonics 0.00187900
 for in 0.02870400
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  37% gen_dvect 0.00000000
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003700
 power_call_rz_harmonics 0.00003600
 amoeba1 0.00107500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00013900
 amoeba2 0.00585500
 for num_harmonics 0.00049700
 for in 0.00764600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013700
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00368500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056200
 amoeba2 0.02576200
 for num_harmonics 0.00198000
 for in 0.03227200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  62% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013600
 power_call_rz_harmonics 0.00013700
 amoeba1 0.00560500
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00058800
 amoeba2 0.02087500
 for num_harmonics 0.00205800
 for in 0.02940800
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  75% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012400
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00373600
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056700
 amoeba2 0.02569400
 for num_harmonics 0.00188200
 for in 0.03215100
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  87% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 4
 for0 0.00008000
 power_call_rz_harmonics 0.00007100
 amoeba1 0.00328700
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00028000
 amoeba2 0.01149300
 for num_harmonics 0.00096200
 for in 0.01617800
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.19611 s


width < len (6) in center_string(outstring, '861.39', width=5)

width < len (9) in center_string(outstring, '371093.25', width=6)

width < len (6) in center_string(outstring, '149.39', width=5)

width < len (8) in center_string(outstring, '11185.42', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9882(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4978(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9878(69)', width=10)

width < len (14) in center_string(outstring, '-0.1(2.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.4(1.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(4.6)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.8(1.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.2(3.7)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.6(5.4)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.8)x10^1', width=12)

width < len (6) in center_string(outstring, '117.36', width=5)

width < len (11) in center_string(outstring, ' 0.5130(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7189(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.1)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(4.0)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM10.50_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM10.50_ACCEL_0'.


    Fourier-Domain Acceleration and Jerk Search Routine
                    by Scott M. Ransom

Analyzing Mystery_PSR data from 'Sband_DM25.00.fft'.

Memory mapping the input FFT.  This may take a while...
Normalizing powers using median-blocks (default).

Full f-fdot plane would need 0.00 GB: using in-memory accelsearch.

Searching with up to 8 harmonics summed:
  f = 1.0 to 6944.4 Hz
  r = 38.0 to 265499.0 Fourier bins
  z = 0.0 to 0.0 Fourier bins drifted

Generating correlation kernels:
  Harm  1/1 :     1 kernels,    0 < z < 0    (2048 pt FFTs)
Total RAM used by correlation kernels:  0.000 GB
Done generating kernels.

Starting the search.

  Working candidates in a test format are in 'Sband_DM25.00_ACCEL_0.txtcand'.


Amount of search complete =   0%
Amount of search complete =   1%
Amount of search complete =   2%
Amount of search complete =   3%
Amount of search complete =   4%
Amount of search complete =   5%
Amount of search complete =   6%
Amount of search complete =   7%
Amount of search complete =   8%
Amount of search complete =   9%
Amount of search complete =  10%
Amount of search complete =  11%
Amount of search complete =  12%
Amount of search complete =  13%
Amount of search complete =  14%
Amount of search complete =  15%
Amount of search complete =  16%
Amount of search complete =  17%
Amount of search complete =  18%
Amount of search complete =  19%
Amount of search complete =  20%
Amount of search complete =  21%
Amount of search complete =  22%
Amount of search complete =  23%
Amount of search complete =  24%
Amount of search complete =  25%
Amount of search complete =  26%
Amount of search complete =  27%
Amount of search complete =  28%
Amount of search complete =  29%
Amount of search complete =  30%
Amount of search complete =  31%
Amount of search complete =  32%
Amount of search complete =  33%
Amount of search complete =  34%
Amount of search complete =  35%
Amount of search complete =  36%
Amount of search complete =  37%
Amount of search complete =  38%
Amount of search complete =  39%
Amount of search complete =  40%
Amount of search complete =  41%
Amount of search complete =  42%
Amount of search complete =  43%
Amount of search complete =  44%
Amount of search complete =  45%
Amount of search complete =  46%
Amount of search complete =  47%
Amount of search complete =  48%
Amount of search complete =  49%
Amount of search complete =  50%
Amount of search complete =  51%
Amount of search complete =  52%
Amount of search complete =  53%
Amount of search complete =  54%
Amount of search complete =  55%
Amount of search complete =  56%
Amount of search complete =  57%
Amount of search complete =  58%
Amount of search complete =  59%
Amount of search complete =  60%
Amount of search complete =  61%
Amount of search complete =  62%
Amount of search complete =  63%
Amount of search complete =  64%
Amount of search complete =  65%
Amount of search complete =  66%
Amount of search complete =  67%
Amount of search complete =  68%
Amount of search complete =  69%
Amount of search complete =  70%
Amount of search complete =  71%
Amount of search complete =  72%
Amount of search complete =  73%
Amount of search complete =  74%
Amount of search complete =  75%
Amount of search complete =  76%
Amount of search complete =  77%
Amount of search complete =  78%
Amount of search complete =  79%
Amount of search complete =  80%
Amount of search complete =  81%
Amount of search complete =  82%
Amount of search complete =  83%
Amount of search complete =  84%
Amount of search complete =  85%
Amount of search complete =  86%
Amount of search complete =  87%
Amount of search complete =  88%
Amount of search complete =  89%
Amount of search complete =  90%
Amount of search complete =  91%
Amount of search complete =  92%
Amount of search complete =  93%
Amount of search complete =  94%
Amount of search complete =  95%
Amount of search complete =  96%
Amount of search complete =  97%
Amount of search complete =  98%
Amount of search complete =  99%
Amount of search complete = 100%

Done searching.  Now optimizing each candidate.

Removed 16 likely harmonically related candidates.

Amount of optimization complete =   0% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00010600
 power_call_rz_harmonics 0.00021900
 amoeba1 0.01276200
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00066500
 amoeba2 0.02905100
 for num_harmonics 0.00338900
 for in 0.04620600
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  16% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00086800
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00015600
 amoeba2 0.00509200
 for num_harmonics 0.00049800
 for in 0.00669600
 candidate_sigmaZ 0.00000100

Amount of optimization complete =  33% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012100
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00575500
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00056100
 amoeba2 0.02459200
 for num_harmonics 0.00190100
 for in 0.03307600
 candidate_sigmaZ 0.00000400

Amount of optimization complete =  50% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 2
 for0 0.00003800
 power_call_rz_harmonics 0.00003700
 amoeba1 0.00076100
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00014800
 amoeba2 0.00505000
 for num_harmonics 0.00047100
 for in 0.00651200
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  66% gen_dvect 0.00000100
 malloc 0.00000100


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00012200
 power_call_rz_harmonics 0.00014000
 amoeba1 0.00356900
 z_resp_halfwidth 0.00000000
 power_call_rz_harmonics 0.00056900
 amoeba2 0.02808000
 for num_harmonics 0.00193700
 for in 0.03442300
 candidate_sigmaZ 0.00000200

Amount of optimization complete =  83% gen_dvect 0.00000100
 malloc 0.00000000


obs->use_harmonic_polishing &&(obs->mmap_file || obs->dat_input

num_harmonics 8
 for0 0.00013900
 power_call_rz_harmonics 0.00013900
 amoeba1 0.00420700
 z_resp_halfwidth 0.00000100
 power_call_rz_harmonics 0.00055900
 amoeba2 0.02485200
 for num_harmonics 0.00186600
 for in 0.03176500
 candidate_sigmaZ 0.00000200

Amount of optimization complete = 100%

for1 cost 0.15874 s


width < len (6) in center_string(outstring, '866.62', width=5)

width < len (9) in center_string(outstring, '375615.75', width=6)

width < len (6) in center_string(outstring, '150.56', width=5)

width < len (8) in center_string(outstring, '11360.82', width=6)

width < len (11) in center_string(outstring, ' 0.9007(86)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9889(69)', width=10)

width < len (11) in center_string(outstring, ' 0.4976(44)', width=10)

width < len (11) in center_string(outstring, ' 0.9877(69)', width=10)

width < len (14) in center_string(outstring, ' 0.6(1.5)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.1(2.7)x10^1', width=12)

width < len (6) in center_string(outstring, '117.34', width=5)

width < len (11) in center_string(outstring, ' 0.5131(25)', width=10)

width < len (11) in center_string(outstring, ' 1.7218(22)', width=10)

width < len (14) in center_string(outstring, '-0.2(3.0)x10^1', width=12)

width < len (14) in center_string(outstring, '-0.5(1.6)x10^1', width=12)

width < len (13) in center_string(outstring, '0.0(1.7)x10^2', width=12)

width < len (11) in center_string(outstring, ' 149.97(51)', width=10)

width < len (14) in center_string(outstring, '0.0(2.9)x10^-1', width=12)

width < len (14) in center_string(outstring, '-0.2(1.3)x10^1', width=12)


Searched the following approx numbers of independent points:
  1 harmonic:      265461
  2 harmonics:     132730
  4 harmonics:      66365
  8 harmonics:      33182

Timing summary:
Final candidates in binary format are in 'Sband_DM25.00_ACCEL_0.cand'.
Final Candidates in a text format are in 'Sband_DM25.00_ACCEL_0'.
